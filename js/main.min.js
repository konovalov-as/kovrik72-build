/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_mobile_vh_fix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/mobile-vh-fix.js */ "./js/utils/mobile-vh-fix.js");
/* harmony import */ var _modules_tabs_init_tabs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/tabs/init-tabs.js */ "./js/modules/tabs/init-tabs.js");
/* harmony import */ var _modules_accordion_init_accordion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/accordion/init-accordion.js */ "./js/modules/accordion/init-accordion.js");
/* harmony import */ var _vendor_PhotoSwipe_init_photosipe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vendor/PhotoSwipe/init-photosipe.js */ "./js/vendor/PhotoSwipe/init-photosipe.js");
/* harmony import */ var _modules_tabs_menu_tabs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/tabs/menu-tabs.js */ "./js/modules/tabs/menu-tabs.js");
/* harmony import */ var _modules_smooth_scroll_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/smooth-scroll/index.js */ "./js/modules/smooth-scroll/index.js");
/* harmony import */ var _modules_yandexmap_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/yandexmap/map.js */ "./js/modules/yandexmap/map.js");

// import {initModals} from './modules/modals/init-modals';
// import {Form} from './modules/form-validate/form';
// import {CustomSelect} from './modules/select/custom-select';
// import {uploadFile, uploadImageDrop} from './modules/input-file/init-upload';

// import {initLocomotiveScroll} from './modules/header/init-locomotive-scroll.js';







// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  Object(_utils_mobile_vh_fix_js__WEBPACK_IMPORTED_MODULE_0__["mobileVhFix"])();
  // initLocomotiveScroll();
  Object(_modules_smooth_scroll_index_js__WEBPACK_IMPORTED_MODULE_5__["initSmoothScroll"])();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    // uploadFile();
    // uploadImageDrop();
    // const select = new CustomSelect();
    // select.init();
    // const form = new Form();
    // window.form = form;
    // form.init();

    // initSlider();
    Object(_modules_tabs_init_tabs_js__WEBPACK_IMPORTED_MODULE_1__["initTabs"])();
    Object(_modules_accordion_init_accordion_js__WEBPACK_IMPORTED_MODULE_2__["initAccordions"])();
    Object(_vendor_PhotoSwipe_init_photosipe_js__WEBPACK_IMPORTED_MODULE_3__["initPhotoswipe"])();
    Object(_modules_tabs_menu_tabs_js__WEBPACK_IMPORTED_MODULE_4__["switchTabByClickMenu"])();
    Object(_modules_yandexmap_map_js__WEBPACK_IMPORTED_MODULE_6__["initMap"])();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

/***/ }),

/***/ "./js/modules/accordion/accordions.js":
/*!********************************************!*\
  !*** ./js/modules/accordion/accordions.js ***!
  \********************************************/
/*! exports provided: Accordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Accordions", function() { return Accordions; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Accordions = /*#__PURE__*/function () {
  function Accordions() {
    _classCallCheck(this, Accordions);
    this._openHeight = 0;
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._windowResizeHandler = this._windowResizeHandler.bind(this);
    this._init();
  }
  _createClass(Accordions, [{
    key: "_init",
    value: function _init() {
      this.fullUpdate();
      document.addEventListener('click', this._documentClickHandler);
      window.addEventListener('resize', this._windowResizeHandler);
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-accordion="button"]')) {
        return;
      }
      evt.preventDefault();
      var parent = target.closest('[data-accordion="parent"]');
      if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
        return;
      }
      var element = target.closest('[data-accordion="element"]');
      if (element.classList.contains('is-active')) {
        this.closeAccordion(element);
        return;
      }
      this.openAccordion(element);
    }
  }, {
    key: "_windowResizeHandler",
    value: function _windowResizeHandler() {
      if (this._windowWidth === window.innerWidth) {
        return;
      }
      this._windowWidth = window.innerWidth;
      this.updateAccordionsHeight();
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this = this;
      var elements = parent.querySelectorAll('[data-accordion="element"]');
      elements.forEach(function (element) {
        var currentParent = element.closest('[data-accordion="parent"]');
        if (currentParent === parent) {
          _this.closeAccordion(element);
        }
      });
    }
  }, {
    key: "updateAccordionsHeight",
    value: function updateAccordionsHeight() {
      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      if (element) {
        var content = element.querySelector('[data-accordion="content"]');
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
        return;
      }
      var closeElements = document.querySelectorAll('[data-accordion="element"]:not(.is-active)');
      closeElements.forEach(function (closeElement) {
        var parent = closeElement.closest('[data-accordion="parent"]');
        var content = closeElement.querySelector('[data-accordion="content"]');
        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }
        content.style.maxHeight = null;
      });
      var openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      openElements.forEach(function (openElement) {
        var content = openElement.querySelector('[data-accordion="content"]');
        var parent = openElement.closest('[data-accordion="parent"]');
        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
      });
    }
  }, {
    key: "fullUpdate",
    value: function fullUpdate() {
      var _this2 = this;
      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var openElements;
      if (parent) {
        openElements = parent.querySelectorAll('[data-accordion="element"].is-active');
      } else {
        openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      }
      openElements.forEach(function (openElement) {
        var innerParent = openElement.querySelector('[data-accordion="parent"]');
        if (innerParent) {
          return;
        }
        _this2.openAccordion(openElement, transition);
      });
      this.updateAccordionsHeight();
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var parentElement = element.closest('[data-accordion="parent"]');
      var contentElement = element.querySelector('[data-accordion="content"]');
      this._openHeight += contentElement.scrollHeight;
      if (parentElement.hasAttribute('data-single')) {
        this.closeAllAccordion(parentElement);
      }
      element.classList.add('is-active');
      if (transition) {
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
      if (parentElement.closest('[data-accordion="element"]')) {
        this.openAccordion(parentElement.closest('[data-accordion="element"]'), transition);
        return;
      }
      this._openHeight = 0;
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var contentElement = element.querySelector('[data-accordion="content"]');
      if (!contentElement) {
        return;
      }
      element.classList.remove('is-active');
      if (transition) {
        contentElement.style.maxHeight = '0';
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = '0';
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
    }
  }]);
  return Accordions;
}();

/***/ }),

/***/ "./js/modules/accordion/init-accordion.js":
/*!************************************************!*\
  !*** ./js/modules/accordion/init-accordion.js ***!
  \************************************************/
/*! exports provided: initAccordions, accordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAccordions", function() { return initAccordions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accordions", function() { return accordions; });
/* harmony import */ var _accordions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordions */ "./js/modules/accordion/accordions.js");

var accordions;
var initAccordions = function initAccordions() {
  accordions = new _accordions__WEBPACK_IMPORTED_MODULE_0__["Accordions"]();
  // Используйте в разработке экспортируемую переменную accordions, window сделан для бэкэнда
  window.accordions = accordions;
};


/***/ }),

/***/ "./js/modules/smooth-scroll/index.js":
/*!*******************************************!*\
  !*** ./js/modules/smooth-scroll/index.js ***!
  \*******************************************/
/*! exports provided: initSmoothScroll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSmoothScroll", function() { return initSmoothScroll; });
var initSmoothScroll = function initSmoothScroll() {
  document.querySelectorAll('[data-smooth="scroll"]').forEach(function (anchor) {
    anchor.addEventListener('click', function (evt) {
      evt.preventDefault();
      document.querySelector(evt.target.getAttribute('href')).scrollIntoView({
        behavior: 'smooth'
      });
    });
  });
};


/***/ }),

/***/ "./js/modules/tabs/init-tabs.js":
/*!**************************************!*\
  !*** ./js/modules/tabs/init-tabs.js ***!
  \**************************************/
/*! exports provided: initTabs, tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTabs", function() { return initTabs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tabs", function() { return tabs; });
/* harmony import */ var _tabs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs */ "./js/modules/tabs/tabs.js");

var tabs;
var initTabs = function initTabs() {
  tabs = new _tabs__WEBPACK_IMPORTED_MODULE_0__["Tabs"]();
  // Используйте в разработке экспортируемую переменную tabs, window сделан для бэкэнда
  window.tabs = tabs;
};


/***/ }),

/***/ "./js/modules/tabs/menu-tabs.js":
/*!**************************************!*\
  !*** ./js/modules/tabs/menu-tabs.js ***!
  \**************************************/
/*! exports provided: switchTabByClickMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchTabByClickMenu", function() { return switchTabByClickMenu; });
var switchTabByClickMenu = function switchTabByClickMenu() {
  var priceParent = document.querySelector('[data-price-tabs="price-parent"]');
  if (!priceParent) {
    return;
  }
  var allGoodsTabs = priceParent.querySelectorAll('[data-price-tabs="price-element"]');
  var allGoodsControlList = document.querySelectorAll('[data-price-tabs="price-control"]');
  var priceLinks = document.querySelectorAll('[data-price-tabs="price-link"]');
  priceLinks.forEach(function (element, index) {
    element.classList.remove('is-active');
    element.setAttribute('data-index', index);
  });
  priceLinks.forEach(function (priceLink) {
    priceLink.addEventListener('click', function (evt) {
      evt.preventDefault();
      var tabId = evt.target.getAttribute('data-index');
      allGoodsTabs.forEach(function (tab) {
        return tab.classList.remove('is-active');
      });
      allGoodsControlList.forEach(function (tab) {
        return tab.classList.remove('is-active');
      });
      var activeTab = allGoodsTabs[Number(tabId)];
      activeTab.classList.add('is-active');
      activeTab.scrollIntoView({
        behavior: 'smooth'
      });
      allGoodsControlList[Number(tabId)].classList.add('is-active');
    });
  });
};


/***/ }),

/***/ "./js/modules/tabs/tabs.js":
/*!*********************************!*\
  !*** ./js/modules/tabs/tabs.js ***!
  \*********************************/
/*! exports provided: Tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tabs", function() { return Tabs; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Tabs = /*#__PURE__*/function () {
  function Tabs() {
    _classCallCheck(this, Tabs);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._init();
  }
  _createClass(Tabs, [{
    key: "_init",
    value: function _init() {
      this._initAllTabs();
      document.addEventListener('click', this._documentClickHandler);
    }
  }, {
    key: "_resizeObserver",
    value: function _resizeObserver() {
      var _this = this;
      return new ResizeObserver(function (entries) {
        var _iterator = _createForOfIteratorHelper(entries),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var entry = _step.value;
            if (entry.target.classList.contains('is-active')) {
              _this._updateTabHeight();
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-tabs="control"]')) {
        return;
      }
      evt.preventDefault();
      evt.stopPropagation();
      var control = target.closest('[data-tabs="control"]');
      this.openTab(control);
    }
  }, {
    key: "_initAllTabs",
    value: function _initAllTabs() {
      var _this2 = this;
      var tabs = document.querySelectorAll('[data-tabs="parent"]');
      var forLoadTabs = document.querySelectorAll('[data-tabs="element"].for-load');
      tabs.forEach(function (tab) {
        _this2._initTab(tab);
      });
      forLoadTabs.forEach(function (tab) {
        tab.classList.remove('for-load');
      });
    }
  }, {
    key: "_removeAllActiveClasses",
    value: function _removeAllActiveClasses(tabControlElements, tabElements) {
      tabElements.forEach(function (tab) {
        tab.classList.remove('is-active');
      });
      tabControlElements.forEach(function (element, index) {
        element.classList.remove('is-active');
        element.setAttribute('data-index', index);
      });
    }
  }, {
    key: "_setTabStartState",
    value: function _setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay) {
      var activeIndex = this._returnActiveIndex(tabControlElements);
      var blockHeight = dataHeight === 'max' ? this._returnMaxHeight(tabElements) : tabElements[activeIndex].offsetHeight;
      this._removeAllActiveClasses(tabControlElements, tabElements);
      tab.classList.add('no-transition');
      tabControlElements[activeIndex].classList.add('is-active');
      tabElements[activeIndex].classList.add('is-active');
      if (dataHeight !== 'unset') {
        tabContentElement.style.height = "".concat(blockHeight, "px");
      }
      setTimeout(function () {
        if (dataDelay) {
          tab.classList.remove('no-transition');
        }
      }, dataDelay);
    }
  }, {
    key: "_returnActiveIndex",
    value: function _returnActiveIndex(tabControlElements) {
      var activeIndex = 0;
      var flag = true;
      tabControlElements.forEach(function (control, index) {
        if (control.classList.contains('is-active') && flag) {
          activeIndex = index;
          flag = false;
        }
      });
      return activeIndex;
    }
  }, {
    key: "_returnMaxHeight",
    value: function _returnMaxHeight(tabElements) {
      var height = [];
      tabElements.forEach(function (element) {
        height.push(element.offsetHeight);
      });
      height.sort(function (a, b) {
        return a - b;
      });
      return height[height.length - 1];
    }
  }, {
    key: "_returnScopeList",
    value: function _returnScopeList(nodeList, parent) {
      var array = [];
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          array.push(element);
        }
      });
      return array;
    }
  }, {
    key: "_returnScopeChild",
    value: function _returnScopeChild(nodeList, parent) {
      var currentChild;
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          currentChild = element;
        }
      });
      return currentChild;
    }
  }, {
    key: "_updateTabHeight",
    value: function _updateTabHeight() {
      var _this3 = this;
      var activeElements = document.querySelectorAll('[data-tabs="element"].is-active');
      activeElements.forEach(function (element) {
        var transition = false;
        var parent = element.closest('[data-tabs="parent"]');
        if (parent.closest('[data-tabs="element"]')) {
          transition = true;
        }
        _this3._setTabElementHeight(element, transition);
      });
    }
  }, {
    key: "_setTabElementHeight",
    value: function _setTabElementHeight(element, transition) {
      var parentElement = element.closest('[data-tabs="parent"]');
      var dataHeight = parentElement.dataset.height;
      var contentElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="content"]'), parentElement);
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      if (!transition) {
        parentElement.classList.add('no-transition');
      }
      if (dataHeight === 'max') {
        contentElement.style.height = "".concat(this._returnMaxHeight(tabElements), "px");
      } else if (dataHeight === 'unset') {
        contentElement.style.height = null;
      } else {
        contentElement.style.height = "".concat(this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement).offsetHeight, "px");
      }
      setTimeout(function () {
        return parentElement.classList.remove('no-transition');
      });
    }
  }, {
    key: "_createDOMElement",
    value: function _createDOMElement(elementType, attributes) {
      var element = document.createElement(elementType);
      for (var key in attributes) {
        if (attributes.hasOwnProperty(key)) {
          element.setAttribute(key, attributes[key]);
        }
      }
      return element;
    }
  }, {
    key: "_toggleAndRemoveClass",
    value: function _toggleAndRemoveClass(element, accordion, control) {
      accordion.classList.toggle('is-active', element.classList.contains('is-active'));
      element.classList.remove('is-active');
      control.classList.remove('is-active');
    }
  }, {
    key: "_setAccordionState",
    value: function _setAccordionState(parent, elements, controls) {
      var _this4 = this;
      if (parent.hasAttribute('data-accordion-init')) {
        return;
      }
      parent.setAttribute('data-accordion-init', '');
      elements.forEach(function (element, idx) {
        var accordion = _this4._createDOMElement('div', {
          'data-tabs': 'accordion'
        });
        var accordionWrapper = _this4._createDOMElement('div', {
          'data-tabs': 'accordion-wrapper'
        });
        var accordionContent = _this4._createDOMElement('div', {
          'data-tabs': 'accordion-content'
        });
        accordion.append(controls[idx], accordionWrapper);
        accordionWrapper.append(accordionContent);
        accordionContent.append(element);
        parent.append(accordion);
        _this4._toggleAndRemoveClass(element, accordion, controls[idx]);
      });
    }
  }, {
    key: "_removeAccordionState",
    value: function _removeAccordionState(parent, elements, controls) {
      var _this5 = this;
      if (!parent.hasAttribute('data-accordion-init')) {
        return;
      }
      parent.removeAttribute('data-accordion-init');
      var controlList = this._returnScopeChild(parent.querySelectorAll('[data-tabs="controls"]'), parent);
      var content = this._returnScopeChild(parent.querySelectorAll('[data-tabs="content"]'), parent);
      var activeAccordions = this._returnScopeList(parent.querySelectorAll('[data-tabs="accordion"].is-active'), parent);
      var activeControl = activeAccordions.length ? activeAccordions[0].querySelector('[data-tabs="control"]') : controls[0];
      var activeElement = activeAccordions.length ? activeAccordions[0].querySelector('[data-tabs="element"]') : elements[0];
      elements.forEach(function (element, idx) {
        var accordion = element.closest('[data-tabs="accordion"]');
        if (!accordion) {
          return;
        }
        controlList.append(controls[idx]);
        content.append(element);
        _this5._toggleAndRemoveClass(element, accordion, controls[idx]);
        accordion.remove();
      });
      activeControl.classList.add('is-active');
      activeElement.classList.add('is-active');
    }
  }, {
    key: "accordionBreakpointChecker",
    value: function accordionBreakpointChecker(media, parent, elements, controls) {
      if (media.matches) {
        this._setAccordionState(parent, elements, controls);
      } else {
        this._removeAccordionState(parent, elements, controls);
      }
    }
  }, {
    key: "_initTab",
    value: function _initTab(tab) {
      var _this6 = this;
      var dataHeight = tab.dataset.height;
      var dataDelay = tab.dataset.delay ? tab.dataset.delay : 0;
      var tabContentElement = tab.querySelector('[data-tabs="content"]');
      var tabControlElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="control"]'), tab);
      var tabElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="element"]'), tab);
      var accordionMedia = tab.getAttribute('data-accordion-media') ? window.matchMedia(tab.getAttribute('data-accordion-media')) : null;
      this._setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay);
      if (accordionMedia && !tab.accordionListener) {
        this.accordionBreakpointChecker(accordionMedia, tab, tabElements, tabControlElements);
        accordionMedia.addEventListener('change', this.accordionBreakpointChecker.bind(this, accordionMedia, tab, tabElements, tabControlElements));
        tab.accordionListener = true;
      }
      if (dataHeight !== 'unset') {
        tabElements.forEach(function (element) {
          _this6._resizeObserver().observe(element);
        });
      }
      setTimeout(function () {
        tab.classList.remove('no-transition-global');
      });
    }
  }, {
    key: "reInit",
    value: function reInit() {
      this._initAllTabs();
    }
  }, {
    key: "toggleAccordion",
    value: function toggleAccordion(accordion) {
      if (accordion.classList.contains('is-active')) {
        this.closeAccordion(accordion);
      } else {
        this.openAccordion(accordion);
      }
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(accordion) {
      var parentElement = accordion.closest('[data-accordion-init]');
      var accordionWrapper = accordion.querySelector('[data-tabs="accordion-wrapper"]');
      accordionWrapper.style.maxHeight = "".concat(accordionWrapper.offsetHeight, "px");
      if (parentElement.hasAttribute('data-single')) {
        this.closeAllAccordion(parentElement);
      }
      accordion.classList.add('is-active');
      setTimeout(function () {
        accordionWrapper.style.maxHeight = "".concat(accordionWrapper.scrollHeight, "px");
        accordionWrapper.addEventListener('transitionend', function () {
          accordionWrapper.style.maxHeight = null;
        }, {
          once: true
        });
      }, 0);
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this7 = this;
      var elements = parent.querySelectorAll('[data-tabs="accordion"]');
      elements.forEach(function (element) {
        var currentParent = element.closest('[data-accordion-init]');
        if (currentParent === parent && element.classList.contains('is-active')) {
          _this7.closeAccordion(element);
        }
      });
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(accordion) {
      var accordionWrapper = accordion.querySelector('[data-tabs="accordion-wrapper"]');
      accordion.classList.remove('is-active');
      accordionWrapper.style.transition = 'none';
      accordionWrapper.style.maxHeight = "".concat(accordionWrapper.scrollHeight, "px");
      setTimeout(function () {
        accordionWrapper.style.transition = null;
        accordionWrapper.style.maxHeight = '0px';
        accordionWrapper.addEventListener('transitionend', function () {
          accordionWrapper.style.maxHeight = null;
        }, {
          once: true
        });
      }, 0);
    }
  }, {
    key: "openTab",
    value: function openTab(control) {
      var currentIndex = control.dataset.index;
      var parentElement = control.closest('[data-tabs="parent"]');
      var accordion = control.closest('[data-tabs="accordion"]');
      if (accordion && accordion.closest('[data-tabs="parent"]') === parentElement) {
        this.toggleAccordion(accordion);
        document.activeElement.blur();
        return;
      }
      if (control.classList.contains('is-active') || parentElement.classList.contains('no-action')) {
        return;
      }
      var dataDelay = parentElement.dataset.delay ? parentElement.dataset.delay : 0;
      var dataHeight = parentElement.dataset.height;
      var contentElement = parentElement.querySelector('[data-tabs="content"]');
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      var activeControl = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="control"].is-active'), parentElement);
      var activeElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement);
      var currentHeight = contentElement.offsetHeight;
      var newHeight = tabElements[currentIndex].offsetHeight;
      parentElement.classList.add('no-action');
      document.activeElement.blur();
      if (activeControl) {
        activeControl.classList.remove('is-active');
      }
      if (activeElement) {
        activeElement.classList.remove('is-active');
      }
      if (currentHeight > newHeight) {
        setTimeout(function () {
          if (dataHeight !== 'max' && dataHeight !== 'unset') {
            contentElement.style.height = newHeight + 'px';
          }
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      } else {
        if (dataHeight !== 'max' && dataHeight !== 'unset') {
          contentElement.style.height = newHeight + 'px';
        }
        setTimeout(function () {
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      }
    }
  }]);
  return Tabs;
}();

/***/ }),

/***/ "./js/modules/yandexmap/map.js":
/*!*************************************!*\
  !*** ./js/modules/yandexmap/map.js ***!
  \*************************************/
/*! exports provided: initMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMap", function() { return initMap; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
// export const initYandexMap = () => {
//
//
//   initMap();
//
//   async function initMap() {
//     // Промис `ymaps3.ready` будет зарезолвлен, когда загрузятся все компоненты основного модуля API
//     await ymaps3.ready;
//
//     const {YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer, YMapControls} = ymaps3;
//
//     // // Import the package to add a default marker
//     // const {YMapDefaultMarker} = await ymaps3.import('@yandex/ymaps3-default-ui-theme');
//
//     let popupWithImage = null;
//     let popupWithButtons = null;
//
//
//     // Иницилиазируем карту
//     const map = new YMap(
//       // Передаём ссылку на HTMLElement контейнера
//       document.getElementById('map'),
//
//       // Передаём параметры инициализации карты
//       {
//         location: {
//           // Координаты центра карты
//           center: [65.565796, 57.142643],
//
//           // Уровень масштабирования
//           zoom: 17
//         }
//       }
//     );
//
//     // Добавляем слой для отображения схематической карты
//     map.addChild(new YMapDefaultSchemeLayer());
//
//
//
//
//
//
//
//
//
//
//   }
//
// }

// блок с картой
var mapBox = document.querySelector('[data-mapbox]');
var initMap = function initMap() {
  if (!mapBox) {
    return;
  }
  var mapCenterCoords = {
    x: mapBox.dataset.mapCenterCoordX,
    y: mapBox.dataset.mapCenterCoordY
  };
  var zoom = mapBox.dataset.zoom;
  var pinCoords = {
    x: mapBox.dataset.pinCoordX,
    y: mapBox.dataset.pinCoordY
  };
  var mapPin = {
    iconHref: mapBox.dataset.mapPin,
    width: mapBox.dataset.width,
    height: mapBox.dataset.height,
    alt: mapBox.dataset.alt
  };
  var popupContent = {
    header: mapBox.dataset.header,
    body: mapBox.dataset.body,
    footer: mapBox.dataset.footer
  };
  function initYMap() {
    return _initYMap.apply(this, arguments);
  }
  function _initYMap() {
    _initYMap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var _ymaps, YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer, YMapMarker, YMapControls, _yield$ymaps3$import, YMapZoomControl, YMapGeolocationControl, _yield$ymaps3$import2, YMapOpenMapsButton, map, markerWithPopup, rightMarker;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return ymaps3.ready;
          case 2:
            _ymaps = ymaps3, YMap = _ymaps.YMap, YMapDefaultSchemeLayer = _ymaps.YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer = _ymaps.YMapDefaultFeaturesLayer, YMapMarker = _ymaps.YMapMarker, YMapControls = _ymaps.YMapControls;
            _context.next = 5;
            return ymaps3.import('@yandex/ymaps3-controls@0.0.1');
          case 5:
            _yield$ymaps3$import = _context.sent;
            YMapZoomControl = _yield$ymaps3$import.YMapZoomControl;
            YMapGeolocationControl = _yield$ymaps3$import.YMapGeolocationControl;
            _context.next = 10;
            return ymaps3.import('@yandex/ymaps3-controls-extra');
          case 10:
            _yield$ymaps3$import2 = _context.sent;
            YMapOpenMapsButton = _yield$ymaps3$import2.YMapOpenMapsButton;
            // Иницилиазируем карту
            map = new YMap(
            // Передаём ссылку на HTMLElement контейнера
            mapBox,
            // Передаём параметры инициализации карты
            {
              location: {
                // Координаты центра карты
                center: [mapCenterCoords.y, mapCenterCoords.x],
                // Уровень масштабирования
                zoom: zoom
              },
              behaviors: ['drag', 'scrollZoom', 'pinchZoom', 'dblClick', 'magnifier']
            }); // Добавляем слой для отображения схематической карты
            map.addChild(new YMapDefaultSchemeLayer());

            // Добавьте слой для маркеров
            map.addChild(new YMapDefaultFeaturesLayer());
            markerWithPopup = /*#__PURE__*/function (_ymaps3$YMapComplexEn) {
              _inherits(markerWithPopup, _ymaps3$YMapComplexEn);
              var _super = _createSuper(markerWithPopup);
              function markerWithPopup(props) {
                var _this;
                _classCallCheck(this, markerWithPopup);
                _this = _super.call(this, props);
                _this._state = {
                  popupOpen: false
                };
                return _this;
              }
              _createClass(markerWithPopup, [{
                key: "_onAttach",
                value: function _onAttach() {
                  this._actualize();
                }
              }, {
                key: "_onDetach",
                value: function _onDetach() {
                  this.marker = null;
                }
              }, {
                key: "_onUpdate",
                value: function _onUpdate(props) {
                  if (props.coordinates) {
                    var _this$marker;
                    (_this$marker = this.marker) === null || _this$marker === void 0 ? void 0 : _this$marker.update({
                      coordinates: props.coordinates
                    });
                  }
                  this._actualize();
                }
              }, {
                key: "_actualize",
                value: function _actualize() {
                  var props = this._props;
                  this._lazyCreatePopup();
                  this._lazyCreateMarker();
                  if (!this._state.popupOpen || !props.popupHidesMarker) {
                    this.addChild(this.marker);
                  } else if (this.marker) {
                    this.removeChild(this.marker);
                  }
                  if (this._state.popupOpen) {
                    this.popupElement.style.display = 'flex';
                    this._markerElement.removeChild(this._beaconElement);
                  } else if (this.popupElement) {
                    this.popupElement.style.display = 'none';
                    this._markerElement.appendChild(this._beaconElement);
                  }
                }
              }, {
                key: "_lazyCreateMarker",
                value: function _lazyCreateMarker() {
                  var _this2 = this;
                  if (this.marker) return;
                  var pinElement = document.createElement('button');
                  pinElement.setAttribute('type', 'button');
                  pinElement.setAttribute('aria-label', 'Открыть popup');
                  pinElement.className = 'marker__pin';
                  var pinIcon = document.createElement('img');
                  pinIcon.src = this._props.mapPin.iconHref;
                  pinIcon.width = this._props.mapPin.width;
                  pinIcon.height = this._props.mapPin.height;
                  pinIcon.alt = this._props.mapPin.alt;
                  pinElement.append(pinIcon);
                  var beaconElement = document.createElement('span');
                  beaconElement.className = 'marker__beacon';
                  this._beaconElement = beaconElement;
                  var animation1 = document.createElement('div');
                  animation1.className = 'marker__animation';
                  var animation2 = animation1.cloneNode(true);
                  animation2.classList.add('marker__animation-delay');
                  beaconElement.append(animation1, animation2);
                  var markerElement = document.createElement('div');
                  markerElement.className = 'marker';
                  markerElement.append(pinElement, beaconElement);
                  this._markerElement = markerElement;
                  pinElement.onclick = function () {
                    _this2._state.popupOpen = true;
                    _this2._actualize();
                  };
                  var container = document.createElement('div');
                  container.append(this._markerElement, this.popupElement);
                  this.marker = new YMapMarker({
                    coordinates: this._props.coordinates,
                    draggable: false
                  }, container);
                }
              }, {
                key: "_lazyCreatePopup",
                value: function _lazyCreatePopup() {
                  var _this3 = this;
                  if (this.popupElement) return;
                  var element = document.createElement('div');
                  element.className = 'popup';
                  var title = document.createElement('h3');
                  title.textContent = this._props.popupContent.header;
                  var textBody = document.createElement('p');
                  textBody.textContent = this._props.popupContent.body;
                  var textFooter = document.createElement('p');
                  textFooter.textContent = this._props.popupContent.footer;
                  var closeBtn = document.createElement('button');
                  closeBtn.className = 'popup__close';
                  closeBtn.setAttribute('type', 'button');
                  closeBtn.setAttribute('aria-label', 'Закрыть popup');
                  closeBtn.textContent = '✖';
                  closeBtn.onclick = function () {
                    _this3._state.popupOpen = false;
                    _this3._actualize();
                  };
                  element.append(title, textBody, textFooter, closeBtn);
                  this.popupElement = element;
                }
              }]);
              return markerWithPopup;
            }(ymaps3.YMapComplexEntity); // Инициализируйте и добавьте маркер на карту
            rightMarker = null;
            map.addChild(rightMarker = new markerWithPopup({
              coordinates: [pinCoords.y, pinCoords.x],
              popupContent: popupContent,
              mapPin: mapPin
            }));

            // Добавляем элементы управления
            map.addChild(new YMapControls({
              position: 'right'
            }).addChild(new YMapZoomControl({})));
            map.addChild(new YMapControls({
              position: 'bottom left'
            }).addChild(new YMapOpenMapsButton({})));
            map.addChild(new YMapControls({
              position: 'left'
            }).addChild(new YMapGeolocationControl({})));
          case 21:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _initYMap.apply(this, arguments);
  }
  initYMap();
  function addAriaLabels() {
    var zoomButtons = document.querySelectorAll('.ymaps3x0--zoom-control .ymaps3x0--button');
    if (zoomButtons.length >= 2) {
      zoomButtons[0].setAttribute('aria-label', 'Zoom in');
      zoomButtons[1].setAttribute('aria-label', 'Zoom out');
    }
    var otherButtons = document.querySelectorAll('.ymaps3x0--control:not(.ymaps3x0--zoom-control) .ymaps3x0--button');
    otherButtons.forEach(function (button, index) {
      button.setAttribute('aria-label', 'Toggle location');
    });
  }
  setTimeout(addAriaLabels, 500);
};

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/mobile-vh-fix.js":
/*!***********************************!*\
  !*** ./js/utils/mobile-vh-fix.js ***!
  \***********************************/
/*! exports provided: mobileVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mobileVhFix", function() { return mobileVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");

var mobileVhFix = function mobileVhFix() {
  var isMobile = /Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  var isIE = !!window.MSInputMethodContext && !!document.documentMode;
  if (!isIE && (isMobile || Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])())) {
    var updateViewportHeight = function updateViewportHeight() {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
    };
    updateViewportHeight();
    window.addEventListener('resize', updateViewportHeight);
  }
};


/***/ }),

/***/ "./js/vendor/PhotoSwipe/init-photosipe.js":
/*!************************************************!*\
  !*** ./js/vendor/PhotoSwipe/init-photosipe.js ***!
  \************************************************/
/*! exports provided: initPhotoswipe, photoswipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPhotoswipe", function() { return initPhotoswipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "photoswipe", function() { return photoswipe; });
/* harmony import */ var _photoswipe_esm_min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./photoswipe.esm.min.js */ "./js/vendor/PhotoSwipe/photoswipe.esm.min.js");
/* harmony import */ var _photoswipe_lightbox_esm_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./photoswipe-lightbox.esm.min.js */ "./js/vendor/PhotoSwipe/photoswipe-lightbox.esm.min.js");


var photoswipe;
var initPhotoswipe = function initPhotoswipe() {
  photoswipe = new _photoswipe_lightbox_esm_min_js__WEBPACK_IMPORTED_MODULE_1__["default"]({
    gallery: '.goods-gallery',
    children: 'a',
    pswpModule: _photoswipe_esm_min_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    arrowPrev: true,
    arrowNext: true,
    zoom: true,
    closeOnScroll: false
  });
  photoswipe.init();
  window.photoswipe = photoswipe;
};


/***/ }),

/***/ "./js/vendor/PhotoSwipe/photoswipe-lightbox.esm.min.js":
/*!*************************************************************!*\
  !*** ./js/vendor/PhotoSwipe/photoswipe-lightbox.esm.min.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return v; });
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/* !
  * PhotoSwipe Lightbox 5.4.4 - https://photoswipe.com
  * (c) 2024 Dmytro Semenov
  */
function t(t, i, s) {
  var h = document.createElement(i);
  return t && (h.className = t), s && s.appendChild(h), h;
}
function i(t, i, s) {
  t.style.width = typeof i === 'number' ? "".concat(i, "px") : i, t.style.height = typeof s === 'number' ? "".concat(s, "px") : s;
}
var s = 'idle';
var h = 'loading';
var e = 'loaded';
var n = 'error';
function o(t, i) {
  var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;
  var h = [];
  if (t instanceof Element) {
    h = [t];
  } else if (t instanceof NodeList || Array.isArray(t)) {
    h = Array.from(t);
  } else {
    var _e = typeof t === 'string' ? t : i;
    _e && (h = Array.from(s.querySelectorAll(_e)));
  }
  return h;
}
function r() {
  return !(!navigator.vendor || !navigator.vendor.match(/apple/i));
}
var l = /*#__PURE__*/function () {
  function l(t, i) {
    _classCallCheck(this, l);
    this.type = t, this.defaultPrevented = !1, i && Object.assign(this, i);
  }
  _createClass(l, [{
    key: "preventDefault",
    value: function preventDefault() {
      this.defaultPrevented = !0;
    }
  }]);
  return l;
}();
var a = /*#__PURE__*/function () {
  function a(i, s) {
    _classCallCheck(this, a);
    if (this.element = t('pswp__img pswp__img--placeholder', i ? 'img' : 'div', s), i) {
      var _t = this.element;
      _t.decoding = 'async', _t.alt = '', _t.src = i, _t.setAttribute('role', 'presentation');
    }
    this.element.setAttribute('aria-hidden', 'true');
  }
  _createClass(a, [{
    key: "setDisplayedSize",
    value: function setDisplayedSize(t, s) {
      this.element && (this.element.tagName === 'IMG' ? (i(this.element, 250, 'auto'), this.element.style.transformOrigin = '0 0', this.element.style.transform = function (t, i, s) {
        var h = "translate3d(".concat(t, "px,").concat(i || 0, "px,0)");
        return void 0 !== s && (h += " scale3d(".concat(s, ",").concat(s, ",1)")), h;
      }(0, 0, t / 250)) : i(this.element, t, s));
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var t;
      (t = this.element) !== null && void 0 !== t && t.parentNode && this.element.remove(), this.element = null;
    }
  }]);
  return a;
}();
var d = /*#__PURE__*/function () {
  function d(t, i, h) {
    _classCallCheck(this, d);
    this.instance = i, this.data = t, this.index = h, this.element = void 0, this.placeholder = void 0, this.slide = void 0, this.displayedImageWidth = 0, this.displayedImageHeight = 0, this.width = Number(this.data.w) || Number(this.data.width) || 0, this.height = Number(this.data.h) || Number(this.data.height) || 0, this.isAttached = !1, this.hasSlide = !1, this.isDecoding = !1, this.state = s, this.data.type ? this.type = this.data.type : this.data.src ? this.type = 'image' : this.type = 'html', this.instance.dispatch('contentInit', {
      content: this
    });
  }
  _createClass(d, [{
    key: "removePlaceholder",
    value: function removePlaceholder() {
      var _this = this;
      this.placeholder && !this.keepPlaceholder() && setTimeout(function () {
        _this.placeholder && (_this.placeholder.destroy(), _this.placeholder = void 0);
      }, 1e3);
    }
  }, {
    key: "load",
    value: function load(i, s) {
      if (this.slide && this.usePlaceholder()) {
        if (this.placeholder) {
          var _t2 = this.placeholder.element;
          _t2 && !_t2.parentElement && this.slide.container.prepend(_t2);
        } else {
          var _t3 = this.instance.applyFilters('placeholderSrc', !(!this.data.msrc || !this.slide.isFirstSlide) && this.data.msrc, this);
          this.placeholder = new a(_t3, this.slide.container);
        }
      }
      this.element && !s || this.instance.dispatch('contentLoad', {
        content: this,
        isLazy: i
      }).defaultPrevented || (this.isImageContent() ? (this.element = t('pswp__img', 'img'), this.displayedImageWidth && this.loadImage(i)) : (this.element = t('pswp__content', 'div'), this.element.innerHTML = this.data.html || ''), s && this.slide && this.slide.updateContentSize(!0));
    }
  }, {
    key: "loadImage",
    value: function loadImage(t) {
      var _this2 = this;
      var i;
      var s;
      if (!this.isImageContent() || !this.element || this.instance.dispatch('contentLoadImage', {
        content: this,
        isLazy: t
      }).defaultPrevented) {
        return;
      }
      var e = this.element;
      this.updateSrcsetSizes(), this.data.srcset && (e.srcset = this.data.srcset), e.src = (i = this.data.src) !== null && void 0 !== i ? i : '', e.alt = (s = this.data.alt) !== null && void 0 !== s ? s : '', this.state = h, e.complete ? this.onLoaded() : (e.onload = function () {
        _this2.onLoaded();
      }, e.onerror = function () {
        _this2.onError();
      });
    }
  }, {
    key: "setSlide",
    value: function setSlide(t) {
      this.slide = t, this.hasSlide = !0, this.instance = t.pswp;
    }
  }, {
    key: "onLoaded",
    value: function onLoaded() {
      this.state = e, this.slide && this.element && (this.instance.dispatch('loadComplete', {
        slide: this.slide,
        content: this
      }), this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode && (this.append(), this.slide.updateContentSize(!0)), this.state !== e && this.state !== n || this.removePlaceholder());
    }
  }, {
    key: "onError",
    value: function onError() {
      this.state = n, this.slide && (this.displayError(), this.instance.dispatch('loadComplete', {
        slide: this.slide,
        isError: !0,
        content: this
      }), this.instance.dispatch('loadError', {
        slide: this.slide,
        content: this
      }));
    }
  }, {
    key: "isLoading",
    value: function isLoading() {
      return this.instance.applyFilters('isContentLoading', this.state === h, this);
    }
  }, {
    key: "isError",
    value: function isError() {
      return this.state === n;
    }
  }, {
    key: "isImageContent",
    value: function isImageContent() {
      return this.type === 'image';
    }
  }, {
    key: "setDisplayedSize",
    value: function setDisplayedSize(t, s) {
      if (this.element && (this.placeholder && this.placeholder.setDisplayedSize(t, s), !this.instance.dispatch('contentResize', {
        content: this,
        width: t,
        height: s
      }).defaultPrevented && (i(this.element, t, s), this.isImageContent() && !this.isError()))) {
        var _i = !this.displayedImageWidth && t;
        this.displayedImageWidth = t, this.displayedImageHeight = s, _i ? this.loadImage(!1) : this.updateSrcsetSizes(), this.slide && this.instance.dispatch('imageSizeChange', {
          slide: this.slide,
          width: t,
          height: s,
          content: this
        });
      }
    }
  }, {
    key: "isZoomable",
    value: function isZoomable() {
      return this.instance.applyFilters('isContentZoomable', this.isImageContent() && this.state !== n, this);
    }
  }, {
    key: "updateSrcsetSizes",
    value: function updateSrcsetSizes() {
      if (!this.isImageContent() || !this.element || !this.data.srcset) {
        return;
      }
      var t = this.element;
      var i = this.instance.applyFilters('srcsetSizesWidth', this.displayedImageWidth, this);
      (!t.dataset.largestUsedSize || i > parseInt(t.dataset.largestUsedSize, 10)) && (t.sizes = i + 'px', t.dataset.largestUsedSize = String(i));
    }
  }, {
    key: "usePlaceholder",
    value: function usePlaceholder() {
      return this.instance.applyFilters('useContentPlaceholder', this.isImageContent(), this);
    }
  }, {
    key: "lazyLoad",
    value: function lazyLoad() {
      this.instance.dispatch('contentLazyLoad', {
        content: this
      }).defaultPrevented || this.load(!0);
    }
  }, {
    key: "keepPlaceholder",
    value: function keepPlaceholder() {
      return this.instance.applyFilters('isKeepingPlaceholder', this.isLoading(), this);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.hasSlide = !1, this.slide = void 0, this.instance.dispatch('contentDestroy', {
        content: this
      }).defaultPrevented || (this.remove(), this.placeholder && (this.placeholder.destroy(), this.placeholder = void 0), this.isImageContent() && this.element && (this.element.onload = null, this.element.onerror = null, this.element = void 0));
    }
  }, {
    key: "displayError",
    value: function displayError() {
      if (this.slide) {
        var _i2;
        var _s;
        var _h = t('pswp__error-msg', 'div');
        _h.innerText = (_i2 = (_s = this.instance.options) === null || void 0 === _s ? void 0 : _s.errorMsg) !== null && void 0 !== _i2 ? _i2 : '', _h = this.instance.applyFilters('contentErrorElement', _h, this), this.element = t('pswp__content pswp__error-msg-container', 'div'), this.element.appendChild(_h), this.slide.container.innerText = '', this.slide.container.appendChild(this.element), this.slide.updateContentSize(!0), this.removePlaceholder();
      }
    }
  }, {
    key: "append",
    value: function append() {
      var _this3 = this;
      if (this.isAttached || !this.element) {
        return;
      }
      if (this.isAttached = !0, this.state === n) {
        return void this.displayError();
      }
      if (this.instance.dispatch('contentAppend', {
        content: this
      }).defaultPrevented) {
        return;
      }
      var t = ('decode' in this.element);
      this.isImageContent() ? t && this.slide && (!this.slide.isActive || r()) ? (this.isDecoding = !0, this.element.decode().catch(function () {}).finally(function () {
        _this3.isDecoding = !1, _this3.appendImage();
      })) : this.appendImage() : this.slide && !this.element.parentNode && this.slide.container.appendChild(this.element);
    }
  }, {
    key: "activate",
    value: function activate() {
      !this.instance.dispatch('contentActivate', {
        content: this
      }).defaultPrevented && this.slide && (this.isImageContent() && this.isDecoding && !r() ? this.appendImage() : this.isError() && this.load(!1, !0), this.slide.holderElement && this.slide.holderElement.setAttribute('aria-hidden', 'false'));
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.instance.dispatch('contentDeactivate', {
        content: this
      }), this.slide && this.slide.holderElement && this.slide.holderElement.setAttribute('aria-hidden', 'true');
    }
  }, {
    key: "remove",
    value: function remove() {
      this.isAttached = !1, this.instance.dispatch('contentRemove', {
        content: this
      }).defaultPrevented || (this.element && this.element.parentNode && this.element.remove(), this.placeholder && this.placeholder.element && this.placeholder.element.remove());
    }
  }, {
    key: "appendImage",
    value: function appendImage() {
      this.isAttached && (this.instance.dispatch('contentAppendImage', {
        content: this
      }).defaultPrevented || (this.slide && this.element && !this.element.parentNode && this.slide.container.appendChild(this.element), this.state !== e && this.state !== n || this.removePlaceholder()));
    }
  }]);
  return d;
}();
function c(t, i, s, h, e) {
  var n = 0;
  if (i.paddingFn) {
    n = i.paddingFn(s, h, e)[t];
  } else if (i.padding) {
    n = i.padding[t];
  } else {
    var _s2 = 'padding' + t[0].toUpperCase() + t.slice(1);
    i[_s2] && (n = i[_s2]);
  }
  return Number(n) || 0;
}
var u = /*#__PURE__*/function () {
  function u(t, i, s, h) {
    _classCallCheck(this, u);
    this.pswp = h, this.options = t, this.itemData = i, this.index = s, this.panAreaSize = null, this.elementSize = null, this.fit = 1, this.fill = 1, this.vFill = 1, this.initial = 1, this.secondary = 1, this.max = 1, this.min = 1;
  }
  _createClass(u, [{
    key: "update",
    value: function update(t, i, s) {
      var h = {
        x: t,
        y: i
      };
      this.elementSize = h, this.panAreaSize = s;
      var e = s.x / h.x;
      var n = s.y / h.y;
      this.fit = Math.min(1, e < n ? e : n), this.fill = Math.min(1, e > n ? e : n), this.vFill = Math.min(1, n), this.initial = this.t(), this.secondary = this.i(), this.max = Math.max(this.initial, this.secondary, this.o()), this.min = Math.min(this.fit, this.initial, this.secondary), this.pswp && this.pswp.dispatch('zoomLevelsUpdate', {
        zoomLevels: this,
        slideData: this.itemData
      });
    }
  }, {
    key: "l",
    value: function l(t) {
      var i = t + 'ZoomLevel';
      var s = this.options[i];
      if (s) {
        return typeof s === 'function' ? s(this) : s === 'fill' ? this.fill : s === 'fit' ? this.fit : Number(s);
      }
    }
  }, {
    key: "i",
    value: function i() {
      var t = this.l('secondary');
      return t || (t = Math.min(1, 3 * this.fit), this.elementSize && t * this.elementSize.x > 4e3 && (t = 4e3 / this.elementSize.x), t);
    }
  }, {
    key: "t",
    value: function t() {
      return this.l('initial') || this.fit;
    }
  }, {
    key: "o",
    value: function o() {
      return this.l('max') || Math.max(1, 4 * this.fit);
    }
  }]);
  return u;
}();
function p(t, i, s) {
  var h = i.createContentFromData(t, s);
  var e;
  var n = i.options;
  if (n) {
    var _o;
    e = new u(n, t, -1), _o = i.pswp ? i.pswp.viewportSize : function (t, i) {
      if (t.getViewportSizeFn) {
        var _s3 = t.getViewportSizeFn(t, i);
        if (_s3) {
          return _s3;
        }
      }
      return {
        x: document.documentElement.clientWidth,
        y: window.innerHeight
      };
    }(n, i);
    var _r = function (t, i, s, h) {
      return {
        x: i.x - c('left', t, i, s, h) - c('right', t, i, s, h),
        y: i.y - c('top', t, i, s, h) - c('bottom', t, i, s, h)
      };
    }(n, _o, t, s);
    e.update(h.width, h.height, _r);
  }
  return h.lazyLoad(), e && h.setDisplayedSize(Math.ceil(h.width * e.initial), Math.ceil(h.height * e.initial)), h;
}
var v = /*#__PURE__*/function (_ref) {
  _inherits(v, _ref);
  var _super = _createSuper(v);
  function v(t) {
    var _this4;
    _classCallCheck(this, v);
    _this4 = _super.call(this), _this4.options = t || {}, _this4.g = 0, _this4.shouldOpen = !1, _this4._ = void 0, _this4.onThumbnailsClick = _this4.onThumbnailsClick.bind(_assertThisInitialized(_this4));
    return _this4;
  }
  _createClass(v, [{
    key: "init",
    value: function init() {
      var _this5 = this;
      o(this.options.gallery, this.options.gallerySelector).forEach(function (t) {
        t.addEventListener('click', _this5.onThumbnailsClick, !1);
      });
    }
  }, {
    key: "onThumbnailsClick",
    value: function onThumbnailsClick(t) {
      if (function (t) {
        return 'button' in t && t.button === 1 || t.ctrlKey || t.metaKey || t.altKey || t.shiftKey;
      }(t) || window.pswp) {
        return;
      }
      var i = {
        x: t.clientX,
        y: t.clientY
      };
      i.x || i.y || (i = null);
      var s = this.getClickedIndex(t);
      s = this.applyFilters('clickedIndex', s, t, this);
      var h = {
        gallery: t.currentTarget
      };
      s >= 0 && (t.preventDefault(), this.loadAndOpen(s, h, i));
    }
  }, {
    key: "getClickedIndex",
    value: function getClickedIndex(t) {
      if (this.options.getClickedIndexFn) {
        return this.options.getClickedIndexFn.call(this, t);
      }
      var i = t.target;
      var s = o(this.options.children, this.options.childSelector, t.currentTarget).findIndex(function (t) {
        return t === i || t.contains(i);
      });
      return s !== -1 ? s : this.options.children || this.options.childSelector ? -1 : 0;
    }
  }, {
    key: "loadAndOpen",
    value: function loadAndOpen(t, i, s) {
      if (window.pswp || !this.options) {
        return !1;
      }
      if (!i && this.options.gallery && this.options.children) {
        var _t4 = o(this.options.gallery);
        _t4[0] && (i = {
          gallery: _t4[0]
        });
      }
      return this.options.index = t, this.options.initialPointerPos = s, this.shouldOpen = !0, this.preload(t, i), !0;
    }
  }, {
    key: "preload",
    value: function preload(t, i) {
      var _this6 = this;
      var s = this.options;
      i && (s.dataSource = i);
      var h = [];
      var e = _typeof(s.pswpModule);
      if (typeof (n = s.pswpModule) === 'function' && n.prototype && n.prototype.goTo) {
        h.push(Promise.resolve(s.pswpModule));
      } else {
        if (e === 'string') {
          throw new Error('pswpModule as string is no longer supported');
        }
        if (e !== 'function') {
          throw new Error('pswpModule is not valid');
        }
        h.push(s.pswpModule());
      }
      var n;
      typeof s.openPromise === 'function' && h.push(s.openPromise()), !1 !== s.preloadFirstSlide && t >= 0 && (this._ = function (t, i) {
        var s = i.getItemData(t);
        if (!i.dispatch('lazyLoadSlide', {
          index: t,
          itemData: s
        }).defaultPrevented) {
          return p(s, i, t);
        }
      }(t, this));
      var o = ++this.g;
      Promise.all(h).then(function (t) {
        if (_this6.shouldOpen) {
          var _i3 = t[0];
          _this6.I(_i3, o);
        }
      });
    }
  }, {
    key: "I",
    value: function I(t, i) {
      var _this7 = this;
      if (i !== this.g && this.shouldOpen) {
        return;
      }
      if (this.shouldOpen = !1, window.pswp) {
        return;
      }
      var s = _typeof(t) === 'object' ? new t.default(this.options) : new t(this.options);
      this.pswp = s, window.pswp = s, Object.keys(this.u).forEach(function (t) {
        var i;
        (i = _this7.u[t]) === null || void 0 === i || i.forEach(function (i) {
          s.on(t, i);
        });
      }), Object.keys(this.p).forEach(function (t) {
        var i;
        (i = _this7.p[t]) === null || void 0 === i || i.forEach(function (i) {
          s.addFilter(t, i.fn, i.priority);
        });
      }), this._ && (s.contentLoader.addToCache(this._), this._ = void 0), s.on('destroy', function () {
        _this7.pswp = void 0, delete window.pswp;
      }), s.init();
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var _this8 = this;
      var t;
      (t = this.pswp) === null || void 0 === t || t.destroy(), this.shouldOpen = !1, this.u = {}, o(this.options.gallery, this.options.gallerySelector).forEach(function (t) {
        t.removeEventListener('click', _this8.onThumbnailsClick, !1);
      });
    }
  }]);
  return v;
}( /*#__PURE__*/function (_ref2) {
  _inherits(_class, _ref2);
  var _super2 = _createSuper(_class);
  function _class() {
    _classCallCheck(this, _class);
    return _super2.apply(this, arguments);
  }
  _createClass(_class, [{
    key: "getNumItems",
    value: function getNumItems() {
      var t;
      var i = 0;
      var s = (t = this.options) === null || void 0 === t ? void 0 : t.dataSource;
      s && 'length' in s ? i = s.length : s && 'gallery' in s && (s.items || (s.items = this.v(s.gallery)), s.items && (i = s.items.length));
      var h = this.dispatch('numItems', {
        dataSource: s,
        numItems: i
      });
      return this.applyFilters('numItems', h.numItems, s);
    }
  }, {
    key: "createContentFromData",
    value: function createContentFromData(t, i) {
      return new d(t, this, i);
    }
  }, {
    key: "getItemData",
    value: function getItemData(t) {
      var i;
      var s = (i = this.options) === null || void 0 === i ? void 0 : i.dataSource;
      var h = {};
      Array.isArray(s) ? h = s[t] : s && 'gallery' in s && (s.items || (s.items = this.v(s.gallery)), h = s.items[t]);
      var e = h;
      e instanceof Element && (e = this.m(e));
      var n = this.dispatch('itemData', {
        itemData: e || {},
        index: t
      });
      return this.applyFilters('itemData', n.itemData, t);
    }
  }, {
    key: "v",
    value: function v(t) {
      var i;
      var s;
      return (i = this.options) !== null && void 0 !== i && i.children || (s = this.options) !== null && void 0 !== s && s.childSelector ? o(this.options.children, this.options.childSelector, t) || [] : [t];
    }
  }, {
    key: "m",
    value: function m(t) {
      var i = {
        element: t
      };
      var s = t.tagName === 'A' ? t : t.querySelector('a');
      if (s) {
        i.src = s.dataset.pswpSrc || s.href, s.dataset.pswpSrcset && (i.srcset = s.dataset.pswpSrcset), i.width = s.dataset.pswpWidth ? parseInt(s.dataset.pswpWidth, 10) : 0, i.height = s.dataset.pswpHeight ? parseInt(s.dataset.pswpHeight, 10) : 0, i.w = i.width, i.h = i.height, s.dataset.pswpType && (i.type = s.dataset.pswpType);
        var _e2 = t.querySelector('img');
        var _h2;
        if (_e2) {
          i.msrc = _e2.currentSrc || _e2.src, i.alt = (_h2 = _e2.getAttribute('alt')) !== null && void 0 !== _h2 ? _h2 : '';
        }
        (s.dataset.pswpCropped || s.dataset.cropped) && (i.thumbCropped = !0);
      }
      return this.applyFilters('domItemData', i, t, s);
    }
  }, {
    key: "lazyLoadData",
    value: function lazyLoadData(t, i) {
      return p(t, this, i);
    }
  }]);
  return _class;
}( /*#__PURE__*/function () {
  function _class2() {
    _classCallCheck(this, _class2);
    this.u = {}, this.p = {}, this.pswp = void 0, this.options = void 0;
  }
  _createClass(_class2, [{
    key: "addFilter",
    value: function addFilter(t, i) {
      var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;
      var h;
      var e;
      var n;
      this.p[t] || (this.p[t] = []), (h = this.p[t]) === null || void 0 === h || h.push({
        fn: i,
        priority: s
      }), (e = this.p[t]) === null || void 0 === e || e.sort(function (t, i) {
        return t.priority - i.priority;
      }), (n = this.pswp) === null || void 0 === n || n.addFilter(t, i, s);
    }
  }, {
    key: "removeFilter",
    value: function removeFilter(t, i) {
      this.p[t] && (this.p[t] = this.p[t].filter(function (t) {
        return t.fn !== i;
      })), this.pswp && this.pswp.removeFilter(t, i);
    }
  }, {
    key: "applyFilters",
    value: function applyFilters(t) {
      var _this9 = this;
      for (var _len = arguments.length, i = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        i[_key - 1] = arguments[_key];
      }
      var s;
      return (s = this.p[t]) === null || void 0 === s || s.forEach(function (t) {
        i[0] = t.fn.apply(_this9, i);
      }), i[0];
    }
  }, {
    key: "on",
    value: function on(t, i) {
      var s;
      var h;
      this.u[t] || (this.u[t] = []), (s = this.u[t]) === null || void 0 === s || s.push(i), (h = this.pswp) === null || void 0 === h || h.on(t, i);
    }
  }, {
    key: "off",
    value: function off(t, i) {
      var s;
      this.u[t] && (this.u[t] = this.u[t].filter(function (t) {
        return i !== t;
      })), (s = this.pswp) === null || void 0 === s || s.off(t, i);
    }
  }, {
    key: "dispatch",
    value: function dispatch(t, i) {
      var _this10 = this;
      var s;
      if (this.pswp) {
        return this.pswp.dispatch(t, i);
      }
      var h = new l(t, i);
      return (s = this.u[t]) === null || void 0 === s || s.forEach(function (t) {
        t.call(_this10, h);
      }), h;
    }
  }]);
  return _class2;
}()));


/***/ }),

/***/ "./js/vendor/PhotoSwipe/photoswipe.esm.min.js":
/*!****************************************************!*\
  !*** ./js/vendor/PhotoSwipe/photoswipe.esm.min.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return st; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/*!
  * PhotoSwipe 5.4.4 - https://photoswipe.com
  * (c) 2024 Dmytro Semenov
  */
function t(t, i, s) {
  var h = document.createElement(i);
  return t && (h.className = t), s && s.appendChild(h), h;
}
function i(t, i) {
  return t.x = i.x, t.y = i.y, void 0 !== i.id && (t.id = i.id), t;
}
function s(t) {
  t.x = Math.round(t.x), t.y = Math.round(t.y);
}
function h(t, i) {
  var s = Math.abs(t.x - i.x),
    h = Math.abs(t.y - i.y);
  return Math.sqrt(s * s + h * h);
}
function e(t, i) {
  return t.x === i.x && t.y === i.y;
}
function n(t, i, s) {
  return Math.min(Math.max(t, i), s);
}
function o(t, i, s) {
  var h = "translate3d(".concat(t, "px,").concat(i || 0, "px,0)");
  return void 0 !== s && (h += " scale3d(".concat(s, ",").concat(s, ",1)")), h;
}
function r(t, i, s, h) {
  t.style.transform = o(i, s, h);
}
function a(t, i, s, h) {
  t.style.transition = i ? "".concat(i, " ").concat(s, "ms ").concat(h || "cubic-bezier(.4,0,.22,1)") : "none";
}
function l(t, i, s) {
  t.style.width = "number" == typeof i ? "".concat(i, "px") : i, t.style.height = "number" == typeof s ? "".concat(s, "px") : s;
}
var c = "idle",
  d = "loading",
  u = "loaded",
  p = "error";
function m() {
  return !(!navigator.vendor || !navigator.vendor.match(/apple/i));
}
var v = !1;
try {
  window.addEventListener("test", null, Object.defineProperty({}, "passive", {
    get: function get() {
      v = !0;
    }
  }));
} catch (t) {}
var f = /*#__PURE__*/function () {
  function f() {
    _classCallCheck(this, f);
    this.t = [];
  }
  _createClass(f, [{
    key: "add",
    value: function add(t, i, s, h) {
      this.i(t, i, s, h);
    }
  }, {
    key: "remove",
    value: function remove(t, i, s, h) {
      this.i(t, i, s, h, !0);
    }
  }, {
    key: "removeAll",
    value: function removeAll() {
      var _this = this;
      this.t.forEach(function (t) {
        _this.i(t.target, t.type, t.listener, t.passive, !0, !0);
      }), this.t = [];
    }
  }, {
    key: "i",
    value: function i(t, _i, s, h, e, n) {
      var _this2 = this;
      if (!t) return;
      var o = e ? "removeEventListener" : "addEventListener";
      _i.split(" ").forEach(function (i) {
        if (i) {
          n || (e ? _this2.t = _this2.t.filter(function (h) {
            return h.type !== i || h.listener !== s || h.target !== t;
          }) : _this2.t.push({
            target: t,
            type: i,
            listener: s,
            passive: h
          }));
          var _r = !!v && {
            passive: h || !1
          };
          t[o](i, s, _r);
        }
      });
    }
  }]);
  return f;
}();
function w(t, i) {
  if (t.getViewportSizeFn) {
    var _s = t.getViewportSizeFn(t, i);
    if (_s) return _s;
  }
  return {
    x: document.documentElement.clientWidth,
    y: window.innerHeight
  };
}
function g(t, i, s, h, e) {
  var n = 0;
  if (i.paddingFn) n = i.paddingFn(s, h, e)[t];else if (i.padding) n = i.padding[t];else {
    var _s2 = "padding" + t[0].toUpperCase() + t.slice(1);
    i[_s2] && (n = i[_s2]);
  }
  return Number(n) || 0;
}
function y(t, i, s, h) {
  return {
    x: i.x - g("left", t, i, s, h) - g("right", t, i, s, h),
    y: i.y - g("top", t, i, s, h) - g("bottom", t, i, s, h)
  };
}
var _ = /*#__PURE__*/function () {
  function _(t) {
    _classCallCheck(this, _);
    this.slide = t, this.currZoomLevel = 1, this.center = {
      x: 0,
      y: 0
    }, this.max = {
      x: 0,
      y: 0
    }, this.min = {
      x: 0,
      y: 0
    };
  }
  _createClass(_, [{
    key: "update",
    value: function update(t) {
      this.currZoomLevel = t, this.slide.width ? (this.o("x"), this.o("y"), this.slide.pswp.dispatch("calcBounds", {
        slide: this.slide
      })) : this.reset();
    }
  }, {
    key: "o",
    value: function o(t) {
      var i = this.slide.pswp,
        s = this.slide["x" === t ? "width" : "height"] * this.currZoomLevel,
        h = g("x" === t ? "left" : "top", i.options, i.viewportSize, this.slide.data, this.slide.index),
        e = this.slide.panAreaSize[t];
      this.center[t] = Math.round((e - s) / 2) + h, this.max[t] = s > e ? Math.round(e - s) + h : this.center[t], this.min[t] = s > e ? h : this.center[t];
    }
  }, {
    key: "reset",
    value: function reset() {
      this.center.x = 0, this.center.y = 0, this.max.x = 0, this.max.y = 0, this.min.x = 0, this.min.y = 0;
    }
  }, {
    key: "correctPan",
    value: function correctPan(t, i) {
      return n(i, this.max[t], this.min[t]);
    }
  }]);
  return _;
}();
var x = /*#__PURE__*/function () {
  function x(t, i, s, h) {
    _classCallCheck(this, x);
    this.pswp = h, this.options = t, this.itemData = i, this.index = s, this.panAreaSize = null, this.elementSize = null, this.fit = 1, this.fill = 1, this.vFill = 1, this.initial = 1, this.secondary = 1, this.max = 1, this.min = 1;
  }
  _createClass(x, [{
    key: "update",
    value: function update(t, i, s) {
      var h = {
        x: t,
        y: i
      };
      this.elementSize = h, this.panAreaSize = s;
      var e = s.x / h.x,
        n = s.y / h.y;
      this.fit = Math.min(1, e < n ? e : n), this.fill = Math.min(1, e > n ? e : n), this.vFill = Math.min(1, n), this.initial = this.l(), this.secondary = this.u(), this.max = Math.max(this.initial, this.secondary, this.p()), this.min = Math.min(this.fit, this.initial, this.secondary), this.pswp && this.pswp.dispatch("zoomLevelsUpdate", {
        zoomLevels: this,
        slideData: this.itemData
      });
    }
  }, {
    key: "m",
    value: function m(t) {
      var i = t + "ZoomLevel",
        s = this.options[i];
      if (s) return "function" == typeof s ? s(this) : "fill" === s ? this.fill : "fit" === s ? this.fit : Number(s);
    }
  }, {
    key: "u",
    value: function u() {
      var t = this.m("secondary");
      return t || (t = Math.min(1, 3 * this.fit), this.elementSize && t * this.elementSize.x > 4e3 && (t = 4e3 / this.elementSize.x), t);
    }
  }, {
    key: "l",
    value: function l() {
      return this.m("initial") || this.fit;
    }
  }, {
    key: "p",
    value: function p() {
      return this.m("max") || Math.max(1, 4 * this.fit);
    }
  }]);
  return x;
}();
var b = /*#__PURE__*/function () {
  function b(i, s, h) {
    _classCallCheck(this, b);
    this.data = i, this.index = s, this.pswp = h, this.isActive = s === h.currIndex, this.currentResolution = 0, this.panAreaSize = {
      x: 0,
      y: 0
    }, this.pan = {
      x: 0,
      y: 0
    }, this.isFirstSlide = this.isActive && !h.opener.isOpen, this.zoomLevels = new x(h.options, i, s, h), this.pswp.dispatch("gettingData", {
      slide: this,
      data: this.data,
      index: s
    }), this.content = this.pswp.contentLoader.getContentBySlide(this), this.container = t("pswp__zoom-wrap", "div"), this.holderElement = null, this.currZoomLevel = 1, this.width = this.content.width, this.height = this.content.height, this.heavyAppended = !1, this.bounds = new _(this), this.prevDisplayedWidth = -1, this.prevDisplayedHeight = -1, this.pswp.dispatch("slideInit", {
      slide: this
    });
  }
  _createClass(b, [{
    key: "setIsActive",
    value: function setIsActive(t) {
      t && !this.isActive ? this.activate() : !t && this.isActive && this.deactivate();
    }
  }, {
    key: "append",
    value: function append(t) {
      this.holderElement = t, this.container.style.transformOrigin = "0 0", this.data && (this.calculateSize(), this.load(), this.updateContentSize(), this.appendHeavy(), this.holderElement.appendChild(this.container), this.zoomAndPanToInitial(), this.pswp.dispatch("firstZoomPan", {
        slide: this
      }), this.applyCurrentZoomPan(), this.pswp.dispatch("afterSetContent", {
        slide: this
      }), this.isActive && this.activate());
    }
  }, {
    key: "load",
    value: function load() {
      this.content.load(!1), this.pswp.dispatch("slideLoad", {
        slide: this
      });
    }
  }, {
    key: "appendHeavy",
    value: function appendHeavy() {
      var t = this.pswp;
      !this.heavyAppended && t.opener.isOpen && !t.mainScroll.isShifted() && (this.isActive, 1) && (this.pswp.dispatch("appendHeavy", {
        slide: this
      }).defaultPrevented || (this.heavyAppended = !0, this.content.append(), this.pswp.dispatch("appendHeavyContent", {
        slide: this
      })));
    }
  }, {
    key: "activate",
    value: function activate() {
      this.isActive = !0, this.appendHeavy(), this.content.activate(), this.pswp.dispatch("slideActivate", {
        slide: this
      });
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.isActive = !1, this.content.deactivate(), this.currZoomLevel !== this.zoomLevels.initial && this.calculateSize(), this.currentResolution = 0, this.zoomAndPanToInitial(), this.applyCurrentZoomPan(), this.updateContentSize(), this.pswp.dispatch("slideDeactivate", {
        slide: this
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.content.hasSlide = !1, this.content.remove(), this.container.remove(), this.pswp.dispatch("slideDestroy", {
        slide: this
      });
    }
  }, {
    key: "resize",
    value: function resize() {
      this.currZoomLevel !== this.zoomLevels.initial && this.isActive ? (this.calculateSize(), this.bounds.update(this.currZoomLevel), this.panTo(this.pan.x, this.pan.y)) : (this.calculateSize(), this.currentResolution = 0, this.zoomAndPanToInitial(), this.applyCurrentZoomPan(), this.updateContentSize());
    }
  }, {
    key: "updateContentSize",
    value: function updateContentSize(t) {
      var i = this.currentResolution || this.zoomLevels.initial;
      if (!i) return;
      var s = Math.round(this.width * i) || this.pswp.viewportSize.x,
        h = Math.round(this.height * i) || this.pswp.viewportSize.y;
      (this.sizeChanged(s, h) || t) && this.content.setDisplayedSize(s, h);
    }
  }, {
    key: "sizeChanged",
    value: function sizeChanged(t, i) {
      return (t !== this.prevDisplayedWidth || i !== this.prevDisplayedHeight) && (this.prevDisplayedWidth = t, this.prevDisplayedHeight = i, !0);
    }
  }, {
    key: "getPlaceholderElement",
    value: function getPlaceholderElement() {
      var t;
      return null === (t = this.content.placeholder) || void 0 === t ? void 0 : t.element;
    }
  }, {
    key: "zoomTo",
    value: function zoomTo(t, i, h, e) {
      var _this3 = this;
      var o = this.pswp;
      if (!this.isZoomable() || o.mainScroll.isShifted()) return;
      o.dispatch("beforeZoomTo", {
        destZoomLevel: t,
        centerPoint: i,
        transitionDuration: h
      }), o.animations.stopAllPan();
      var r = this.currZoomLevel;
      e || (t = n(t, this.zoomLevels.min, this.zoomLevels.max)), this.setZoomLevel(t), this.pan.x = this.calculateZoomToPanOffset("x", i, r), this.pan.y = this.calculateZoomToPanOffset("y", i, r), s(this.pan);
      var a = function a() {
        _this3.v(t), _this3.applyCurrentZoomPan();
      };
      h ? o.animations.startTransition({
        isPan: !0,
        name: "zoomTo",
        target: this.container,
        transform: this.getCurrentTransform(),
        onComplete: a,
        duration: h,
        easing: o.options.easing
      }) : a();
    }
  }, {
    key: "toggleZoom",
    value: function toggleZoom(t) {
      this.zoomTo(this.currZoomLevel === this.zoomLevels.initial ? this.zoomLevels.secondary : this.zoomLevels.initial, t, this.pswp.options.zoomAnimationDuration);
    }
  }, {
    key: "setZoomLevel",
    value: function setZoomLevel(t) {
      this.currZoomLevel = t, this.bounds.update(this.currZoomLevel);
    }
  }, {
    key: "calculateZoomToPanOffset",
    value: function calculateZoomToPanOffset(t, i, s) {
      if (0 === this.bounds.max[t] - this.bounds.min[t]) return this.bounds.center[t];
      i || (i = this.pswp.getViewportCenterPoint()), s || (s = this.zoomLevels.initial);
      var h = this.currZoomLevel / s;
      return this.bounds.correctPan(t, (this.pan[t] - i[t]) * h + i[t]);
    }
  }, {
    key: "panTo",
    value: function panTo(t, i) {
      this.pan.x = this.bounds.correctPan("x", t), this.pan.y = this.bounds.correctPan("y", i), this.applyCurrentZoomPan();
    }
  }, {
    key: "isPannable",
    value: function isPannable() {
      return Boolean(this.width) && this.currZoomLevel > this.zoomLevels.fit;
    }
  }, {
    key: "isZoomable",
    value: function isZoomable() {
      return Boolean(this.width) && this.content.isZoomable();
    }
  }, {
    key: "applyCurrentZoomPan",
    value: function applyCurrentZoomPan() {
      this.g(this.pan.x, this.pan.y, this.currZoomLevel), this === this.pswp.currSlide && this.pswp.dispatch("zoomPanUpdate", {
        slide: this
      });
    }
  }, {
    key: "zoomAndPanToInitial",
    value: function zoomAndPanToInitial() {
      this.currZoomLevel = this.zoomLevels.initial, this.bounds.update(this.currZoomLevel), i(this.pan, this.bounds.center), this.pswp.dispatch("initialZoomPan", {
        slide: this
      });
    }
  }, {
    key: "g",
    value: function g(t, i, s) {
      s /= this.currentResolution || this.zoomLevels.initial, r(this.container, t, i, s);
    }
  }, {
    key: "calculateSize",
    value: function calculateSize() {
      var t = this.pswp;
      i(this.panAreaSize, y(t.options, t.viewportSize, this.data, this.index)), this.zoomLevels.update(this.width, this.height, this.panAreaSize), t.dispatch("calcSlideSize", {
        slide: this
      });
    }
  }, {
    key: "getCurrentTransform",
    value: function getCurrentTransform() {
      var t = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);
      return o(this.pan.x, this.pan.y, t);
    }
  }, {
    key: "v",
    value: function v(t) {
      t !== this.currentResolution && (this.currentResolution = t, this.updateContentSize(), this.pswp.dispatch("resolutionChanged"));
    }
  }]);
  return b;
}();
var S = /*#__PURE__*/function () {
  function S(t) {
    _classCallCheck(this, S);
    this.gestures = t, this.pswp = t.pswp, this.startPan = {
      x: 0,
      y: 0
    };
  }
  _createClass(S, [{
    key: "start",
    value: function start() {
      this.pswp.currSlide && i(this.startPan, this.pswp.currSlide.pan), this.pswp.animations.stopAll();
    }
  }, {
    key: "change",
    value: function change() {
      var _this$gestures = this.gestures,
        t = _this$gestures.p1,
        i = _this$gestures.prevP1,
        h = _this$gestures.dragAxis,
        e = this.pswp.currSlide;
      if ("y" === h && this.pswp.options.closeOnVerticalDrag && e && e.currZoomLevel <= e.zoomLevels.fit && !this.gestures.isMultitouch) {
        var _s3 = e.pan.y + (t.y - i.y);
        if (!this.pswp.dispatch("verticalDrag", {
          panY: _s3
        }).defaultPrevented) {
          this._("y", _s3, .6);
          var _t = 1 - Math.abs(this.S(e.pan.y));
          this.pswp.applyBgOpacity(_t), e.applyCurrentZoomPan();
        }
      } else {
        this.M("x") || (this.M("y"), e && (s(e.pan), e.applyCurrentZoomPan()));
      }
    }
  }, {
    key: "end",
    value: function end() {
      var t = this.gestures.velocity,
        _this$pswp = this.pswp,
        i = _this$pswp.mainScroll,
        s = _this$pswp.currSlide;
      var h = 0;
      if (this.pswp.animations.stopAll(), i.isShifted()) {
        var _s4 = (i.x - i.getCurrSlideX()) / this.pswp.viewportSize.x;
        t.x < -.5 && _s4 < 0 || t.x < .1 && _s4 < -.5 ? (h = 1, t.x = Math.min(t.x, 0)) : (t.x > .5 && _s4 > 0 || t.x > -.1 && _s4 > .5) && (h = -1, t.x = Math.max(t.x, 0)), i.moveIndexBy(h, !0, t.x);
      }
      s && s.currZoomLevel > s.zoomLevels.max || this.gestures.isMultitouch ? this.gestures.zoomLevels.correctZoomPan(!0) : (this.P("x"), this.P("y"));
    }
  }, {
    key: "P",
    value: function P(t) {
      var _this4 = this;
      var i = this.gestures.velocity,
        s = this.pswp.currSlide;
      if (!s) return;
      var h = s.pan,
        e = s.bounds,
        o = h[t],
        r = this.pswp.bgOpacity < 1 && "y" === t,
        a = o + function (t, i) {
          return t * i / (1 - i);
        }(i[t], .995);
      if (r) {
        var _t2 = this.S(o),
          _i2 = this.S(a);
        if (_t2 < 0 && _i2 < -.4 || _t2 > 0 && _i2 > .4) return void this.pswp.close();
      }
      var l = e.correctPan(t, a);
      if (o === l) return;
      var c = l === a ? 1 : .82,
        d = this.pswp.bgOpacity,
        u = l - o;
      this.pswp.animations.startSpring({
        name: "panGesture" + t,
        isPan: !0,
        start: o,
        end: l,
        velocity: i[t],
        dampingRatio: c,
        onUpdate: function onUpdate(i) {
          if (r && _this4.pswp.bgOpacity < 1) {
            var _t3 = 1 - (l - i) / u;
            _this4.pswp.applyBgOpacity(n(d + (1 - d) * _t3, 0, 1));
          }
          h[t] = Math.floor(i), s.applyCurrentZoomPan();
        }
      });
    }
  }, {
    key: "M",
    value: function M(t) {
      var _this$gestures2 = this.gestures,
        i = _this$gestures2.p1,
        s = _this$gestures2.dragAxis,
        h = _this$gestures2.prevP1,
        e = _this$gestures2.isMultitouch,
        _this$pswp2 = this.pswp,
        n = _this$pswp2.currSlide,
        o = _this$pswp2.mainScroll,
        r = i[t] - h[t],
        a = o.x + r;
      if (!r || !n) return !1;
      if ("x" === t && !n.isPannable() && !e) return o.moveTo(a, !0), !0;
      var l = n.bounds,
        c = n.pan[t] + r;
      if (this.pswp.options.allowPanToNext && "x" === s && "x" === t && !e) {
        var _i3 = o.getCurrSlideX(),
          _s5 = o.x - _i3,
          _h = r > 0,
          _e = !_h;
        if (c > l.min[t] && _h) {
          if (l.min[t] <= this.startPan[t]) return o.moveTo(a, !0), !0;
          this._(t, c);
        } else if (c < l.max[t] && _e) {
          if (this.startPan[t] <= l.max[t]) return o.moveTo(a, !0), !0;
          this._(t, c);
        } else if (0 !== _s5) {
          if (_s5 > 0) return o.moveTo(Math.max(a, _i3), !0), !0;
          if (_s5 < 0) return o.moveTo(Math.min(a, _i3), !0), !0;
        } else this._(t, c);
      } else "y" === t && (o.isShifted() || l.min.y === l.max.y) || this._(t, c);
      return !1;
    }
  }, {
    key: "S",
    value: function S(t) {
      var i, s;
      return (t - (null !== (i = null === (s = this.pswp.currSlide) || void 0 === s ? void 0 : s.bounds.center.y) && void 0 !== i ? i : 0)) / (this.pswp.viewportSize.y / 3);
    }
  }, {
    key: "_",
    value: function _(t, i, s) {
      var h = this.pswp.currSlide;
      if (!h) return;
      var e = h.pan,
        n = h.bounds;
      if (n.correctPan(t, i) !== i || s) {
        var _h2 = Math.round(i - e[t]);
        e[t] += _h2 * (s || .35);
      } else e[t] = i;
    }
  }]);
  return S;
}();
function z(t, i, s) {
  return t.x = (i.x + s.x) / 2, t.y = (i.y + s.y) / 2, t;
}
var M = /*#__PURE__*/function () {
  function M(t) {
    _classCallCheck(this, M);
    this.gestures = t, this.C = {
      x: 0,
      y: 0
    }, this.T = {
      x: 0,
      y: 0
    }, this.A = {
      x: 0,
      y: 0
    }, this.D = !1, this.I = 1;
  }
  _createClass(M, [{
    key: "start",
    value: function start() {
      var t = this.gestures.pswp.currSlide;
      t && (this.I = t.currZoomLevel, i(this.C, t.pan)), this.gestures.pswp.animations.stopAllPan(), this.D = !1;
    }
  }, {
    key: "change",
    value: function change() {
      var _this$gestures3 = this.gestures,
        t = _this$gestures3.p1,
        i = _this$gestures3.startP1,
        s = _this$gestures3.p2,
        e = _this$gestures3.startP2,
        n = _this$gestures3.pswp,
        o = n.currSlide;
      if (!o) return;
      var r = o.zoomLevels.min,
        a = o.zoomLevels.max;
      if (!o.isZoomable() || n.mainScroll.isShifted()) return;
      z(this.T, i, e), z(this.A, t, s);
      var l = 1 / h(i, e) * h(t, s) * this.I;
      if (l > o.zoomLevels.initial + o.zoomLevels.initial / 15 && (this.D = !0), l < r) {
        if (n.options.pinchToClose && !this.D && this.I <= o.zoomLevels.initial) {
          var _t4 = 1 - (r - l) / (r / 1.2);
          n.dispatch("pinchClose", {
            bgOpacity: _t4
          }).defaultPrevented || n.applyBgOpacity(_t4);
        } else l = r - .15 * (r - l);
      } else l > a && (l = a + .05 * (l - a));
      o.pan.x = this.L("x", l), o.pan.y = this.L("y", l), o.setZoomLevel(l), o.applyCurrentZoomPan();
    }
  }, {
    key: "end",
    value: function end() {
      var t = this.gestures.pswp,
        i = t.currSlide;
      (!i || i.currZoomLevel < i.zoomLevels.initial) && !this.D && t.options.pinchToClose ? t.close() : this.correctZoomPan();
    }
  }, {
    key: "L",
    value: function L(t, i) {
      var s = i / this.I;
      return this.A[t] - (this.T[t] - this.C[t]) * s;
    }
  }, {
    key: "correctZoomPan",
    value: function correctZoomPan(t) {
      var s = this.gestures.pswp,
        h = s.currSlide;
      if (null == h || !h.isZoomable()) return;
      0 === this.A.x && (t = !0);
      var o = h.currZoomLevel;
      var r,
        a = !0;
      o < h.zoomLevels.initial ? r = h.zoomLevels.initial : o > h.zoomLevels.max ? r = h.zoomLevels.max : (a = !1, r = o);
      var l = s.bgOpacity,
        c = s.bgOpacity < 1,
        d = i({
          x: 0,
          y: 0
        }, h.pan);
      var u = i({
        x: 0,
        y: 0
      }, d);
      t && (this.A.x = 0, this.A.y = 0, this.T.x = 0, this.T.y = 0, this.I = o, i(this.C, d)), a && (u = {
        x: this.L("x", r),
        y: this.L("y", r)
      }), h.setZoomLevel(r), u = {
        x: h.bounds.correctPan("x", u.x),
        y: h.bounds.correctPan("y", u.y)
      }, h.setZoomLevel(o);
      var p = !e(u, d);
      if (!p && !a && !c) return h.v(r), void h.applyCurrentZoomPan();
      s.animations.stopAllPan(), s.animations.startSpring({
        isPan: !0,
        start: 0,
        end: 1e3,
        velocity: 0,
        dampingRatio: 1,
        naturalFrequency: 40,
        onUpdate: function onUpdate(t) {
          if (t /= 1e3, p || a) {
            if (p && (h.pan.x = d.x + (u.x - d.x) * t, h.pan.y = d.y + (u.y - d.y) * t), a) {
              var _i4 = o + (r - o) * t;
              h.setZoomLevel(_i4);
            }
            h.applyCurrentZoomPan();
          }
          c && s.bgOpacity < 1 && s.applyBgOpacity(n(l + (1 - l) * t, 0, 1));
        },
        onComplete: function onComplete() {
          h.v(r), h.applyCurrentZoomPan();
        }
      });
    }
  }]);
  return M;
}();
function P(t) {
  return !!t.target.closest(".pswp__container");
}
var C = /*#__PURE__*/function () {
  function C(t) {
    _classCallCheck(this, C);
    this.gestures = t;
  }
  _createClass(C, [{
    key: "click",
    value: function click(t, i) {
      var s = i.target.classList,
        h = s.contains("pswp__img"),
        e = s.contains("pswp__item") || s.contains("pswp__zoom-wrap");
      h ? this.k("imageClick", t, i) : e && this.k("bgClick", t, i);
    }
  }, {
    key: "tap",
    value: function tap(t, i) {
      P(i) && this.k("tap", t, i);
    }
  }, {
    key: "doubleTap",
    value: function doubleTap(t, i) {
      P(i) && this.k("doubleTap", t, i);
    }
  }, {
    key: "k",
    value: function k(t, i, s) {
      var h;
      var e = this.gestures.pswp,
        n = e.currSlide,
        o = t + "Action",
        r = e.options[o];
      if (!e.dispatch(o, {
        point: i,
        originalEvent: s
      }).defaultPrevented) if ("function" != typeof r) switch (r) {
        case "close":
        case "next":
          e[r]();
          break;
        case "zoom":
          null == n || n.toggleZoom(i);
          break;
        case "zoom-or-close":
          null != n && n.isZoomable() && n.zoomLevels.secondary !== n.zoomLevels.initial ? n.toggleZoom(i) : e.options.clickToCloseNonZoomable && e.close();
          break;
        case "toggle-controls":
          null === (h = this.gestures.pswp.element) || void 0 === h || h.classList.toggle("pswp--ui-visible");
      } else r.call(e, i, s);
    }
  }]);
  return C;
}();
var T = /*#__PURE__*/function () {
  function T(t) {
    var _this5 = this;
    _classCallCheck(this, T);
    this.pswp = t, this.dragAxis = null, this.p1 = {
      x: 0,
      y: 0
    }, this.p2 = {
      x: 0,
      y: 0
    }, this.prevP1 = {
      x: 0,
      y: 0
    }, this.prevP2 = {
      x: 0,
      y: 0
    }, this.startP1 = {
      x: 0,
      y: 0
    }, this.startP2 = {
      x: 0,
      y: 0
    }, this.velocity = {
      x: 0,
      y: 0
    }, this.Z = {
      x: 0,
      y: 0
    }, this.B = {
      x: 0,
      y: 0
    }, this.F = 0, this.O = [], this.R = "ontouchstart" in window, this.N = !!window.PointerEvent, this.supportsTouch = this.R || this.N && navigator.maxTouchPoints > 1, this.F = 0, this.U = 0, this.V = !1, this.isMultitouch = !1, this.isDragging = !1, this.isZooming = !1, this.raf = null, this.G = null, this.supportsTouch || (t.options.allowPanToNext = !1), this.drag = new S(this), this.zoomLevels = new M(this), this.tapHandler = new C(this), t.on("bindEvents", function () {
      t.events.add(t.scrollWrap, "click", _this5.$.bind(_this5)), _this5.N ? _this5.q("pointer", "down", "up", "cancel") : _this5.R ? (_this5.q("touch", "start", "end", "cancel"), t.scrollWrap && (t.scrollWrap.ontouchmove = function () {}, t.scrollWrap.ontouchend = function () {})) : _this5.q("mouse", "down", "up");
    });
  }
  _createClass(T, [{
    key: "q",
    value: function q(t, i, s, h) {
      var e = this.pswp,
        n = e.events,
        o = h ? t + h : "";
      n.add(e.scrollWrap, t + i, this.onPointerDown.bind(this)), n.add(window, t + "move", this.onPointerMove.bind(this)), n.add(window, t + s, this.onPointerUp.bind(this)), o && n.add(e.scrollWrap, o, this.onPointerUp.bind(this));
    }
  }, {
    key: "onPointerDown",
    value: function onPointerDown(t) {
      var s = "mousedown" === t.type || "mouse" === t.pointerType;
      if (s && t.button > 0) return;
      var h = this.pswp;
      h.opener.isOpen ? h.dispatch("pointerDown", {
        originalEvent: t
      }).defaultPrevented || (s && (h.mouseDetected(), this.H(t, "down")), h.animations.stopAll(), this.K(t, "down"), 1 === this.F && (this.dragAxis = null, i(this.startP1, this.p1)), this.F > 1 ? (this.W(), this.isMultitouch = !0) : this.isMultitouch = !1) : t.preventDefault();
    }
  }, {
    key: "onPointerMove",
    value: function onPointerMove(t) {
      this.H(t, "move"), this.F && (this.K(t, "move"), this.pswp.dispatch("pointerMove", {
        originalEvent: t
      }).defaultPrevented || (1 !== this.F || this.isDragging ? this.F > 1 && !this.isZooming && (this.j(), this.isZooming = !0, this.X(), this.zoomLevels.start(), this.Y(), this.J()) : (this.dragAxis || this.tt(), this.dragAxis && !this.isDragging && (this.isZooming && (this.isZooming = !1, this.zoomLevels.end()), this.isDragging = !0, this.W(), this.X(), this.U = Date.now(), this.V = !1, i(this.B, this.p1), this.velocity.x = 0, this.velocity.y = 0, this.drag.start(), this.Y(), this.J()))));
    }
  }, {
    key: "j",
    value: function j() {
      this.isDragging && (this.isDragging = !1, this.V || this.it(!0), this.drag.end(), this.dragAxis = null);
    }
  }, {
    key: "onPointerUp",
    value: function onPointerUp(t) {
      this.F && (this.K(t, "up"), this.pswp.dispatch("pointerUp", {
        originalEvent: t
      }).defaultPrevented || (0 === this.F && (this.Y(), this.isDragging ? this.j() : this.isZooming || this.isMultitouch || this.st(t)), this.F < 2 && this.isZooming && (this.isZooming = !1, this.zoomLevels.end(), 1 === this.F && (this.dragAxis = null, this.X()))));
    }
  }, {
    key: "J",
    value: function J() {
      (this.isDragging || this.isZooming) && (this.it(), this.isDragging ? e(this.p1, this.prevP1) || this.drag.change() : e(this.p1, this.prevP1) && e(this.p2, this.prevP2) || this.zoomLevels.change(), this.ht(), this.raf = requestAnimationFrame(this.J.bind(this)));
    }
  }, {
    key: "it",
    value: function it(t) {
      var s = Date.now(),
        h = s - this.U;
      h < 50 && !t || (this.velocity.x = this.et("x", h), this.velocity.y = this.et("y", h), this.U = s, i(this.B, this.p1), this.V = !0);
    }
  }, {
    key: "st",
    value: function st(t) {
      var _this6 = this;
      var s = this.pswp.mainScroll;
      if (s.isShifted()) return void s.moveIndexBy(0, !0);
      if (t.type.indexOf("cancel") > 0) return;
      if ("mouseup" === t.type || "mouse" === t.pointerType) return void this.tapHandler.click(this.startP1, t);
      var e = this.pswp.options.doubleTapAction ? 300 : 0;
      this.G ? (this.W(), h(this.Z, this.startP1) < 25 && this.tapHandler.doubleTap(this.startP1, t)) : (i(this.Z, this.startP1), this.G = setTimeout(function () {
        _this6.tapHandler.tap(_this6.startP1, t), _this6.W();
      }, e));
    }
  }, {
    key: "W",
    value: function W() {
      this.G && (clearTimeout(this.G), this.G = null);
    }
  }, {
    key: "et",
    value: function et(t, i) {
      var s = this.p1[t] - this.B[t];
      return Math.abs(s) > 1 && i > 5 ? s / i : 0;
    }
  }, {
    key: "Y",
    value: function Y() {
      this.raf && (cancelAnimationFrame(this.raf), this.raf = null);
    }
  }, {
    key: "H",
    value: function H(t, i) {
      this.pswp.applyFilters("preventPointerEvent", !0, t, i) && t.preventDefault();
    }
  }, {
    key: "K",
    value: function K(t, s) {
      if (this.N) {
        var _h3 = t,
          _e2 = this.O.findIndex(function (t) {
            return t.id === _h3.pointerId;
          });
        "up" === s && _e2 > -1 ? this.O.splice(_e2, 1) : "down" === s && -1 === _e2 ? this.O.push(this.nt(_h3, {
          x: 0,
          y: 0
        })) : _e2 > -1 && this.nt(_h3, this.O[_e2]), this.F = this.O.length, this.F > 0 && i(this.p1, this.O[0]), this.F > 1 && i(this.p2, this.O[1]);
      } else {
        var _i5 = t;
        this.F = 0, _i5.type.indexOf("touch") > -1 ? _i5.touches && _i5.touches.length > 0 && (this.nt(_i5.touches[0], this.p1), this.F++, _i5.touches.length > 1 && (this.nt(_i5.touches[1], this.p2), this.F++)) : (this.nt(t, this.p1), "up" === s ? this.F = 0 : this.F++);
      }
    }
  }, {
    key: "ht",
    value: function ht() {
      i(this.prevP1, this.p1), i(this.prevP2, this.p2);
    }
  }, {
    key: "X",
    value: function X() {
      i(this.startP1, this.p1), i(this.startP2, this.p2), this.ht();
    }
  }, {
    key: "tt",
    value: function tt() {
      if (this.pswp.mainScroll.isShifted()) this.dragAxis = "x";else {
        var _t5 = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);
        if (0 !== _t5) {
          var _i6 = _t5 > 0 ? "x" : "y";
          Math.abs(this.p1[_i6] - this.startP1[_i6]) >= 10 && (this.dragAxis = _i6);
        }
      }
    }
  }, {
    key: "nt",
    value: function nt(t, i) {
      return i.x = t.pageX - this.pswp.offset.x, i.y = t.pageY - this.pswp.offset.y, "pointerId" in t ? i.id = t.pointerId : void 0 !== t.identifier && (i.id = t.identifier), i;
    }
  }, {
    key: "$",
    value: function $(t) {
      this.pswp.mainScroll.isShifted() && (t.preventDefault(), t.stopPropagation());
    }
  }]);
  return T;
}();
var A = /*#__PURE__*/function () {
  function A(t) {
    _classCallCheck(this, A);
    this.pswp = t, this.x = 0, this.slideWidth = 0, this.ot = 0, this.rt = 0, this.lt = -1, this.itemHolders = [];
  }
  _createClass(A, [{
    key: "resize",
    value: function resize(t) {
      var _this7 = this;
      var i = this.pswp,
        s = Math.round(i.viewportSize.x + i.viewportSize.x * i.options.spacing),
        h = s !== this.slideWidth;
      h && (this.slideWidth = s, this.moveTo(this.getCurrSlideX())), this.itemHolders.forEach(function (i, s) {
        h && r(i.el, (s + _this7.lt) * _this7.slideWidth), t && i.slide && i.slide.resize();
      });
    }
  }, {
    key: "resetPosition",
    value: function resetPosition() {
      this.ot = 0, this.rt = 0, this.slideWidth = 0, this.lt = -1;
    }
  }, {
    key: "appendHolders",
    value: function appendHolders() {
      this.itemHolders = [];
      for (var _i7 = 0; _i7 < 3; _i7++) {
        var _s6 = t("pswp__item", "div", this.pswp.container);
        _s6.setAttribute("role", "group"), _s6.setAttribute("aria-roledescription", "slide"), _s6.setAttribute("aria-hidden", "true"), _s6.style.display = 1 === _i7 ? "block" : "none", this.itemHolders.push({
          el: _s6
        });
      }
    }
  }, {
    key: "canBeSwiped",
    value: function canBeSwiped() {
      return this.pswp.getNumItems() > 1;
    }
  }, {
    key: "moveIndexBy",
    value: function moveIndexBy(t, i, s) {
      var _this8 = this;
      var h = this.pswp;
      var e = h.potentialIndex + t;
      var n = h.getNumItems();
      if (h.canLoop()) {
        e = h.getLoopedIndex(e);
        var _i8 = (t + n) % n;
        t = _i8 <= n / 2 ? _i8 : _i8 - n;
      } else e < 0 ? e = 0 : e >= n && (e = n - 1), t = e - h.potentialIndex;
      h.potentialIndex = e, this.ot -= t, h.animations.stopMainScroll();
      var o = this.getCurrSlideX();
      if (i) {
        h.animations.startSpring({
          isMainScroll: !0,
          start: this.x,
          end: o,
          velocity: s || 0,
          naturalFrequency: 30,
          dampingRatio: 1,
          onUpdate: function onUpdate(t) {
            _this8.moveTo(t);
          },
          onComplete: function onComplete() {
            _this8.updateCurrItem(), h.appendHeavy();
          }
        });
        var _t6 = h.potentialIndex - h.currIndex;
        if (h.canLoop()) {
          var _i9 = (_t6 + n) % n;
          _t6 = _i9 <= n / 2 ? _i9 : _i9 - n;
        }
        Math.abs(_t6) > 1 && this.updateCurrItem();
      } else this.moveTo(o), this.updateCurrItem();
      return Boolean(t);
    }
  }, {
    key: "getCurrSlideX",
    value: function getCurrSlideX() {
      return this.slideWidth * this.ot;
    }
  }, {
    key: "isShifted",
    value: function isShifted() {
      return this.x !== this.getCurrSlideX();
    }
  }, {
    key: "updateCurrItem",
    value: function updateCurrItem() {
      var t;
      var i = this.pswp,
        s = this.rt - this.ot;
      if (!s) return;
      this.rt = this.ot, i.currIndex = i.potentialIndex;
      var h,
        e = Math.abs(s);
      e >= 3 && (this.lt += s + (s > 0 ? -3 : 3), e = 3, this.itemHolders.forEach(function (t) {
        var i;
        null === (i = t.slide) || void 0 === i || i.destroy(), t.slide = void 0;
      }));
      for (var _t7 = 0; _t7 < e; _t7++) s > 0 ? (h = this.itemHolders.shift(), h && (this.itemHolders[2] = h, this.lt++, r(h.el, (this.lt + 2) * this.slideWidth), i.setContent(h, i.currIndex - e + _t7 + 2))) : (h = this.itemHolders.pop(), h && (this.itemHolders.unshift(h), this.lt--, r(h.el, this.lt * this.slideWidth), i.setContent(h, i.currIndex + e - _t7 - 2)));
      Math.abs(this.lt) > 50 && !this.isShifted() && (this.resetPosition(), this.resize()), i.animations.stopAllPan(), this.itemHolders.forEach(function (t, i) {
        t.slide && t.slide.setIsActive(1 === i);
      }), i.currSlide = null === (t = this.itemHolders[1]) || void 0 === t ? void 0 : t.slide, i.contentLoader.updateLazy(s), i.currSlide && i.currSlide.applyCurrentZoomPan(), i.dispatch("change");
    }
  }, {
    key: "moveTo",
    value: function moveTo(t, i) {
      if (!this.pswp.canLoop() && i) {
        var _i10 = (this.slideWidth * this.ot - t) / this.slideWidth;
        _i10 += this.pswp.currIndex;
        var _s7 = Math.round(t - this.x);
        (_i10 < 0 && _s7 > 0 || _i10 >= this.pswp.getNumItems() - 1 && _s7 < 0) && (t = this.x + .35 * _s7);
      }
      this.x = t, this.pswp.container && r(this.pswp.container, t), this.pswp.dispatch("moveMainScroll", {
        x: t,
        dragging: null != i && i
      });
    }
  }]);
  return A;
}();
var D = {
    Escape: 27,
    z: 90,
    ArrowLeft: 37,
    ArrowUp: 38,
    ArrowRight: 39,
    ArrowDown: 40,
    Tab: 9
  },
  I = function I(t, i) {
    return i ? t : D[t];
  };
var E = /*#__PURE__*/function () {
  function E(t) {
    var _this9 = this;
    _classCallCheck(this, E);
    this.pswp = t, this.ct = !1, t.on("bindEvents", function () {
      t.options.trapFocus && (t.options.initialPointerPos || _this9.dt(), t.events.add(document, "focusin", _this9.ut.bind(_this9))), t.events.add(document, "keydown", _this9.vt.bind(_this9));
    });
    var i = document.activeElement;
    t.on("destroy", function () {
      t.options.returnFocus && i && _this9.ct && i.focus();
    });
  }
  _createClass(E, [{
    key: "dt",
    value: function dt() {
      !this.ct && this.pswp.element && (this.pswp.element.focus(), this.ct = !0);
    }
  }, {
    key: "vt",
    value: function vt(t) {
      var i = this.pswp;
      if (i.dispatch("keydown", {
        originalEvent: t
      }).defaultPrevented) return;
      if (function (t) {
        return "button" in t && 1 === t.button || t.ctrlKey || t.metaKey || t.altKey || t.shiftKey;
      }(t)) return;
      var s,
        h,
        e = !1;
      var n = ("key" in t);
      switch (n ? t.key : t.keyCode) {
        case I("Escape", n):
          i.options.escKey && (s = "close");
          break;
        case I("z", n):
          s = "toggleZoom";
          break;
        case I("ArrowLeft", n):
          h = "x";
          break;
        case I("ArrowUp", n):
          h = "y";
          break;
        case I("ArrowRight", n):
          h = "x", e = !0;
          break;
        case I("ArrowDown", n):
          e = !0, h = "y";
          break;
        case I("Tab", n):
          this.dt();
      }
      if (h) {
        t.preventDefault();
        var _n = i.currSlide;
        i.options.arrowKeys && "x" === h && i.getNumItems() > 1 ? s = e ? "next" : "prev" : _n && _n.currZoomLevel > _n.zoomLevels.fit && (_n.pan[h] += e ? -80 : 80, _n.panTo(_n.pan.x, _n.pan.y));
      }
      s && (t.preventDefault(), i[s]());
    }
  }, {
    key: "ut",
    value: function ut(t) {
      var i = this.pswp.template;
      i && document !== t.target && i !== t.target && !i.contains(t.target) && i.focus();
    }
  }]);
  return E;
}();
var L = "cubic-bezier(.4,0,.22,1)";
var k = /*#__PURE__*/function () {
  function k(t) {
    var _this10 = this;
    _classCallCheck(this, k);
    var i;
    this.props = t;
    var s = t.target,
      h = t.onComplete,
      e = t.transform,
      _t$onFinish = t.onFinish,
      n = _t$onFinish === void 0 ? function () {} : _t$onFinish,
      _t$duration = t.duration,
      o = _t$duration === void 0 ? 333 : _t$duration,
      _t$easing = t.easing,
      r = _t$easing === void 0 ? L : _t$easing;
    this.onFinish = n;
    var l = e ? "transform" : "opacity",
      c = null !== (i = t[l]) && void 0 !== i ? i : "";
    this.ft = s, this.wt = h, this.gt = !1, this.yt = this.yt.bind(this), this._t = setTimeout(function () {
      a(s, l, o, r), _this10._t = setTimeout(function () {
        s.addEventListener("transitionend", _this10.yt, !1), s.addEventListener("transitioncancel", _this10.yt, !1), _this10._t = setTimeout(function () {
          _this10.xt();
        }, o + 500), s.style[l] = c;
      }, 30);
    }, 0);
  }
  _createClass(k, [{
    key: "yt",
    value: function yt(t) {
      t.target === this.ft && this.xt();
    }
  }, {
    key: "xt",
    value: function xt() {
      this.gt || (this.gt = !0, this.onFinish(), this.wt && this.wt());
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this._t && clearTimeout(this._t), a(this.ft), this.ft.removeEventListener("transitionend", this.yt, !1), this.ft.removeEventListener("transitioncancel", this.yt, !1), this.gt || this.xt();
    }
  }]);
  return k;
}();
var Z = /*#__PURE__*/function () {
  function Z(t, i, s) {
    _classCallCheck(this, Z);
    this.velocity = 1e3 * t, this.bt = i || .75, this.St = s || 12, this.zt = this.St, this.bt < 1 && (this.zt *= Math.sqrt(1 - this.bt * this.bt));
  }
  _createClass(Z, [{
    key: "easeFrame",
    value: function easeFrame(t, i) {
      var s,
        h = 0;
      i /= 1e3;
      var e = Math.pow(Math.E, -this.bt * this.St * i);
      if (1 === this.bt) s = this.velocity + this.St * t, h = (t + s * i) * e, this.velocity = h * -this.St + s * e;else if (this.bt < 1) {
        s = 1 / this.zt * (this.bt * this.St * t + this.velocity);
        var _n2 = Math.cos(this.zt * i),
          _o = Math.sin(this.zt * i);
        h = e * (t * _n2 + s * _o), this.velocity = h * -this.St * this.bt + e * (-this.zt * t * _o + this.zt * s * _n2);
      }
      return h;
    }
  }]);
  return Z;
}();
var B = /*#__PURE__*/function () {
  function B(t) {
    var _this11 = this;
    _classCallCheck(this, B);
    this.props = t, this.Mt = 0;
    var i = t.start,
      s = t.end,
      h = t.velocity,
      e = t.onUpdate,
      n = t.onComplete,
      _t$onFinish2 = t.onFinish,
      o = _t$onFinish2 === void 0 ? function () {} : _t$onFinish2,
      r = t.dampingRatio,
      a = t.naturalFrequency;
    this.onFinish = o;
    var l = new Z(h, r, a);
    var c = Date.now(),
      d = i - s;
    var u = function u() {
      _this11.Mt && (d = l.easeFrame(d, Date.now() - c), Math.abs(d) < 1 && Math.abs(l.velocity) < 50 ? (e(s), n && n(), _this11.onFinish()) : (c = Date.now(), e(d + s), _this11.Mt = requestAnimationFrame(u)));
    };
    this.Mt = requestAnimationFrame(u);
  }
  _createClass(B, [{
    key: "destroy",
    value: function destroy() {
      this.Mt >= 0 && cancelAnimationFrame(this.Mt), this.Mt = 0;
    }
  }]);
  return B;
}();
var F = /*#__PURE__*/function () {
  function F() {
    _classCallCheck(this, F);
    this.activeAnimations = [];
  }
  _createClass(F, [{
    key: "startSpring",
    value: function startSpring(t) {
      this.Pt(t, !0);
    }
  }, {
    key: "startTransition",
    value: function startTransition(t) {
      this.Pt(t);
    }
  }, {
    key: "Pt",
    value: function Pt(t, i) {
      var _this12 = this;
      var s = i ? new B(t) : new k(t);
      return this.activeAnimations.push(s), s.onFinish = function () {
        return _this12.stop(s);
      }, s;
    }
  }, {
    key: "stop",
    value: function stop(t) {
      t.destroy();
      var i = this.activeAnimations.indexOf(t);
      i > -1 && this.activeAnimations.splice(i, 1);
    }
  }, {
    key: "stopAll",
    value: function stopAll() {
      this.activeAnimations.forEach(function (t) {
        t.destroy();
      }), this.activeAnimations = [];
    }
  }, {
    key: "stopAllPan",
    value: function stopAllPan() {
      this.activeAnimations = this.activeAnimations.filter(function (t) {
        return !t.props.isPan || (t.destroy(), !1);
      });
    }
  }, {
    key: "stopMainScroll",
    value: function stopMainScroll() {
      this.activeAnimations = this.activeAnimations.filter(function (t) {
        return !t.props.isMainScroll || (t.destroy(), !1);
      });
    }
  }, {
    key: "isPanRunning",
    value: function isPanRunning() {
      return this.activeAnimations.some(function (t) {
        return t.props.isPan;
      });
    }
  }]);
  return F;
}();
var O = /*#__PURE__*/function () {
  function O(t) {
    _classCallCheck(this, O);
    this.pswp = t, t.events.add(t.element, "wheel", this.Ct.bind(this));
  }
  _createClass(O, [{
    key: "Ct",
    value: function Ct(t) {
      t.preventDefault();
      var i = this.pswp.currSlide;
      var s = t.deltaX,
        h = t.deltaY;
      if (i && !this.pswp.dispatch("wheel", {
        originalEvent: t
      }).defaultPrevented) if (t.ctrlKey || this.pswp.options.wheelToZoom) {
        if (i.isZoomable()) {
          var _s8 = -h;
          1 === t.deltaMode ? _s8 *= .05 : _s8 *= t.deltaMode ? 1 : .002, _s8 = Math.pow(2, _s8);
          var _e3 = i.currZoomLevel * _s8;
          i.zoomTo(_e3, {
            x: t.clientX,
            y: t.clientY
          });
        }
      } else i.isPannable() && (1 === t.deltaMode && (s *= 18, h *= 18), i.panTo(i.pan.x - s, i.pan.y - h));
    }
  }]);
  return O;
}();
var R = /*#__PURE__*/_createClass(function R(i, s) {
  _classCallCheck(this, R);
  var h;
  var e = s.name || s.className;
  var n = s.html;
  if (!1 === i.options[e]) return;
  "string" == typeof i.options[e + "SVG"] && (n = i.options[e + "SVG"]), i.dispatch("uiElementCreate", {
    data: s
  });
  var o = "";
  s.isButton ? (o += "pswp__button ", o += s.className || "pswp__button--".concat(s.name)) : o += s.className || "pswp__".concat(s.name);
  var r = s.isButton ? s.tagName || "button" : s.tagName || "div";
  r = r.toLowerCase();
  var a = t(o, r);
  if (s.isButton) {
    "button" === r && (a.type = "button");
    var _t8 = s.title;
    var _h4 = s.ariaLabel;
    "string" == typeof i.options[e + "Title"] && (_t8 = i.options[e + "Title"]), _t8 && (a.title = _t8);
    var _n3 = _h4 || _t8;
    _n3 && a.setAttribute("aria-label", _n3);
  }
  a.innerHTML = function (t) {
    if ("string" == typeof t) return t;
    if (!t || !t.isCustomSVG) return "";
    var i = t;
    var s = '<svg aria-hidden="true" class="pswp__icn" viewBox="0 0 %d %d" width="%d" height="%d">';
    return s = s.split("%d").join(i.size || 32), i.outlineID && (s += '<use class="pswp__icn-shadow" xlink:href="#' + i.outlineID + '"/>'), s += i.inner, s += "</svg>", s;
  }(n), s.onInit && s.onInit(a, i), s.onClick && (a.onclick = function (t) {
    "string" == typeof s.onClick ? i[s.onClick]() : "function" == typeof s.onClick && s.onClick(t, a, i);
  });
  var l = s.appendTo || "bar";
  var c = i.element;
  "bar" === l ? (i.topBar || (i.topBar = t("pswp__top-bar pswp__hide-on-close", "div", i.scrollWrap)), c = i.topBar) : (a.classList.add("pswp__hide-on-close"), "wrapper" === l && (c = i.scrollWrap)), null === (h = c) || void 0 === h || h.appendChild(i.applyFilters("uiElement", a, s));
});
function N(t, i, s) {
  t.classList.add("pswp__button--arrow"), t.setAttribute("aria-controls", "pswp__items"), i.on("change", function () {
    i.options.loop || (t.disabled = s ? !(i.currIndex < i.getNumItems() - 1) : !(i.currIndex > 0));
  });
}
var U = {
    name: "arrowPrev",
    className: "pswp__button--arrow--prev",
    title: "Previous",
    order: 10,
    isButton: !0,
    appendTo: "wrapper",
    html: {
      isCustomSVG: !0,
      size: 60,
      inner: '<path d="M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z" id="pswp__icn-arrow"/>',
      outlineID: "pswp__icn-arrow"
    },
    onClick: "prev",
    onInit: N
  },
  V = {
    name: "arrowNext",
    className: "pswp__button--arrow--next",
    title: "Next",
    order: 11,
    isButton: !0,
    appendTo: "wrapper",
    html: {
      isCustomSVG: !0,
      size: 60,
      inner: '<use xlink:href="#pswp__icn-arrow"/>',
      outlineID: "pswp__icn-arrow"
    },
    onClick: "next",
    onInit: function onInit(t, i) {
      N(t, i, !0);
    }
  },
  G = {
    name: "close",
    title: "Close",
    order: 20,
    isButton: !0,
    html: {
      isCustomSVG: !0,
      inner: '<path d="M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z" id="pswp__icn-close"/>',
      outlineID: "pswp__icn-close"
    },
    onClick: "close"
  },
  $ = {
    name: "zoom",
    title: "Zoom",
    order: 10,
    isButton: !0,
    html: {
      isCustomSVG: !0,
      inner: '<path d="M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z" id="pswp__icn-zoom"/><path fill="currentColor" class="pswp__zoom-icn-bar-h" d="M11 16v-2h6v2z"/><path fill="currentColor" class="pswp__zoom-icn-bar-v" d="M13 12h2v6h-2z"/>',
      outlineID: "pswp__icn-zoom"
    },
    onClick: "toggleZoom"
  },
  q = {
    name: "preloader",
    appendTo: "bar",
    order: 7,
    html: {
      isCustomSVG: !0,
      inner: '<path fill-rule="evenodd" clip-rule="evenodd" d="M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z" id="pswp__icn-loading"/>',
      outlineID: "pswp__icn-loading"
    },
    onInit: function onInit(t, i) {
      var s,
        h = null;
      var e = function e(i) {
          var h, e;
          s !== i && (s = i, h = "active", e = i, t.classList.toggle("pswp__preloader--" + h, e));
        },
        n = function n() {
          var t;
          if (null === (t = i.currSlide) || void 0 === t || !t.content.isLoading()) return e(!1), void (h && (clearTimeout(h), h = null));
          h || (h = setTimeout(function () {
            var t;
            e(Boolean(null === (t = i.currSlide) || void 0 === t ? void 0 : t.content.isLoading())), h = null;
          }, i.options.preloaderDelay));
        };
      i.on("change", n), i.on("loadComplete", function (t) {
        i.currSlide === t.slide && n();
      }), i.ui && (i.ui.updatePreloaderVisibility = n);
    }
  },
  H = {
    name: "counter",
    order: 5,
    onInit: function onInit(t, i) {
      i.on("change", function () {
        t.innerText = i.currIndex + 1 + i.options.indexIndicatorSep + i.getNumItems();
      });
    }
  };
function K(t, i) {
  t.classList.toggle("pswp--zoomed-in", i);
}
var W = /*#__PURE__*/function () {
  function W(t) {
    _classCallCheck(this, W);
    this.pswp = t, this.isRegistered = !1, this.uiElementsData = [], this.items = [], this.updatePreloaderVisibility = function () {}, this.Tt = void 0;
  }
  _createClass(W, [{
    key: "init",
    value: function init() {
      var _this13 = this;
      var t = this.pswp;
      this.isRegistered = !1, this.uiElementsData = [G, U, V, $, q, H], t.dispatch("uiRegister"), this.uiElementsData.sort(function (t, i) {
        return (t.order || 0) - (i.order || 0);
      }), this.items = [], this.isRegistered = !0, this.uiElementsData.forEach(function (t) {
        _this13.registerElement(t);
      }), t.on("change", function () {
        var i;
        null === (i = t.element) || void 0 === i || i.classList.toggle("pswp--one-slide", 1 === t.getNumItems());
      }), t.on("zoomPanUpdate", function () {
        return _this13.At();
      });
    }
  }, {
    key: "registerElement",
    value: function registerElement(t) {
      this.isRegistered ? this.items.push(new R(this.pswp, t)) : this.uiElementsData.push(t);
    }
  }, {
    key: "At",
    value: function At() {
      var _this$pswp3 = this.pswp,
        t = _this$pswp3.template,
        i = _this$pswp3.currSlide,
        s = _this$pswp3.options;
      if (this.pswp.opener.isClosing || !t || !i) return;
      var h = i.currZoomLevel;
      if (this.pswp.opener.isOpen || (h = i.zoomLevels.initial), h === this.Tt) return;
      this.Tt = h;
      var e = i.zoomLevels.initial - i.zoomLevels.secondary;
      if (Math.abs(e) < .01 || !i.isZoomable()) return K(t, !1), void t.classList.remove("pswp--zoom-allowed");
      t.classList.add("pswp--zoom-allowed");
      K(t, (h === i.zoomLevels.initial ? i.zoomLevels.secondary : i.zoomLevels.initial) <= h), "zoom" !== s.imageClickAction && "zoom-or-close" !== s.imageClickAction || t.classList.add("pswp--click-to-zoom");
    }
  }]);
  return W;
}();
var j = /*#__PURE__*/function () {
  function j(t, i) {
    _classCallCheck(this, j);
    this.type = t, this.defaultPrevented = !1, i && Object.assign(this, i);
  }
  _createClass(j, [{
    key: "preventDefault",
    value: function preventDefault() {
      this.defaultPrevented = !0;
    }
  }]);
  return j;
}();
var X = /*#__PURE__*/function () {
  function X(i, s) {
    _classCallCheck(this, X);
    if (this.element = t("pswp__img pswp__img--placeholder", i ? "img" : "div", s), i) {
      var _t9 = this.element;
      _t9.decoding = "async", _t9.alt = "", _t9.src = i, _t9.setAttribute("role", "presentation");
    }
    this.element.setAttribute("aria-hidden", "true");
  }
  _createClass(X, [{
    key: "setDisplayedSize",
    value: function setDisplayedSize(t, i) {
      this.element && ("IMG" === this.element.tagName ? (l(this.element, 250, "auto"), this.element.style.transformOrigin = "0 0", this.element.style.transform = o(0, 0, t / 250)) : l(this.element, t, i));
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var t;
      null !== (t = this.element) && void 0 !== t && t.parentNode && this.element.remove(), this.element = null;
    }
  }]);
  return X;
}();
var Y = /*#__PURE__*/function () {
  function Y(t, i, s) {
    _classCallCheck(this, Y);
    this.instance = i, this.data = t, this.index = s, this.element = void 0, this.placeholder = void 0, this.slide = void 0, this.displayedImageWidth = 0, this.displayedImageHeight = 0, this.width = Number(this.data.w) || Number(this.data.width) || 0, this.height = Number(this.data.h) || Number(this.data.height) || 0, this.isAttached = !1, this.hasSlide = !1, this.isDecoding = !1, this.state = c, this.data.type ? this.type = this.data.type : this.data.src ? this.type = "image" : this.type = "html", this.instance.dispatch("contentInit", {
      content: this
    });
  }
  _createClass(Y, [{
    key: "removePlaceholder",
    value: function removePlaceholder() {
      var _this14 = this;
      this.placeholder && !this.keepPlaceholder() && setTimeout(function () {
        _this14.placeholder && (_this14.placeholder.destroy(), _this14.placeholder = void 0);
      }, 1e3);
    }
  }, {
    key: "load",
    value: function load(i, s) {
      if (this.slide && this.usePlaceholder()) if (this.placeholder) {
        var _t10 = this.placeholder.element;
        _t10 && !_t10.parentElement && this.slide.container.prepend(_t10);
      } else {
        var _t11 = this.instance.applyFilters("placeholderSrc", !(!this.data.msrc || !this.slide.isFirstSlide) && this.data.msrc, this);
        this.placeholder = new X(_t11, this.slide.container);
      }
      this.element && !s || this.instance.dispatch("contentLoad", {
        content: this,
        isLazy: i
      }).defaultPrevented || (this.isImageContent() ? (this.element = t("pswp__img", "img"), this.displayedImageWidth && this.loadImage(i)) : (this.element = t("pswp__content", "div"), this.element.innerHTML = this.data.html || ""), s && this.slide && this.slide.updateContentSize(!0));
    }
  }, {
    key: "loadImage",
    value: function loadImage(t) {
      var _this15 = this;
      var i, s;
      if (!this.isImageContent() || !this.element || this.instance.dispatch("contentLoadImage", {
        content: this,
        isLazy: t
      }).defaultPrevented) return;
      var h = this.element;
      this.updateSrcsetSizes(), this.data.srcset && (h.srcset = this.data.srcset), h.src = null !== (i = this.data.src) && void 0 !== i ? i : "", h.alt = null !== (s = this.data.alt) && void 0 !== s ? s : "", this.state = d, h.complete ? this.onLoaded() : (h.onload = function () {
        _this15.onLoaded();
      }, h.onerror = function () {
        _this15.onError();
      });
    }
  }, {
    key: "setSlide",
    value: function setSlide(t) {
      this.slide = t, this.hasSlide = !0, this.instance = t.pswp;
    }
  }, {
    key: "onLoaded",
    value: function onLoaded() {
      this.state = u, this.slide && this.element && (this.instance.dispatch("loadComplete", {
        slide: this.slide,
        content: this
      }), this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode && (this.append(), this.slide.updateContentSize(!0)), this.state !== u && this.state !== p || this.removePlaceholder());
    }
  }, {
    key: "onError",
    value: function onError() {
      this.state = p, this.slide && (this.displayError(), this.instance.dispatch("loadComplete", {
        slide: this.slide,
        isError: !0,
        content: this
      }), this.instance.dispatch("loadError", {
        slide: this.slide,
        content: this
      }));
    }
  }, {
    key: "isLoading",
    value: function isLoading() {
      return this.instance.applyFilters("isContentLoading", this.state === d, this);
    }
  }, {
    key: "isError",
    value: function isError() {
      return this.state === p;
    }
  }, {
    key: "isImageContent",
    value: function isImageContent() {
      return "image" === this.type;
    }
  }, {
    key: "setDisplayedSize",
    value: function setDisplayedSize(t, i) {
      if (this.element && (this.placeholder && this.placeholder.setDisplayedSize(t, i), !this.instance.dispatch("contentResize", {
        content: this,
        width: t,
        height: i
      }).defaultPrevented && (l(this.element, t, i), this.isImageContent() && !this.isError()))) {
        var _s9 = !this.displayedImageWidth && t;
        this.displayedImageWidth = t, this.displayedImageHeight = i, _s9 ? this.loadImage(!1) : this.updateSrcsetSizes(), this.slide && this.instance.dispatch("imageSizeChange", {
          slide: this.slide,
          width: t,
          height: i,
          content: this
        });
      }
    }
  }, {
    key: "isZoomable",
    value: function isZoomable() {
      return this.instance.applyFilters("isContentZoomable", this.isImageContent() && this.state !== p, this);
    }
  }, {
    key: "updateSrcsetSizes",
    value: function updateSrcsetSizes() {
      if (!this.isImageContent() || !this.element || !this.data.srcset) return;
      var t = this.element,
        i = this.instance.applyFilters("srcsetSizesWidth", this.displayedImageWidth, this);
      (!t.dataset.largestUsedSize || i > parseInt(t.dataset.largestUsedSize, 10)) && (t.sizes = i + "px", t.dataset.largestUsedSize = String(i));
    }
  }, {
    key: "usePlaceholder",
    value: function usePlaceholder() {
      return this.instance.applyFilters("useContentPlaceholder", this.isImageContent(), this);
    }
  }, {
    key: "lazyLoad",
    value: function lazyLoad() {
      this.instance.dispatch("contentLazyLoad", {
        content: this
      }).defaultPrevented || this.load(!0);
    }
  }, {
    key: "keepPlaceholder",
    value: function keepPlaceholder() {
      return this.instance.applyFilters("isKeepingPlaceholder", this.isLoading(), this);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.hasSlide = !1, this.slide = void 0, this.instance.dispatch("contentDestroy", {
        content: this
      }).defaultPrevented || (this.remove(), this.placeholder && (this.placeholder.destroy(), this.placeholder = void 0), this.isImageContent() && this.element && (this.element.onload = null, this.element.onerror = null, this.element = void 0));
    }
  }, {
    key: "displayError",
    value: function displayError() {
      if (this.slide) {
        var i, s;
        var _h5 = t("pswp__error-msg", "div");
        _h5.innerText = null !== (i = null === (s = this.instance.options) || void 0 === s ? void 0 : s.errorMsg) && void 0 !== i ? i : "", _h5 = this.instance.applyFilters("contentErrorElement", _h5, this), this.element = t("pswp__content pswp__error-msg-container", "div"), this.element.appendChild(_h5), this.slide.container.innerText = "", this.slide.container.appendChild(this.element), this.slide.updateContentSize(!0), this.removePlaceholder();
      }
    }
  }, {
    key: "append",
    value: function append() {
      var _this16 = this;
      if (this.isAttached || !this.element) return;
      if (this.isAttached = !0, this.state === p) return void this.displayError();
      if (this.instance.dispatch("contentAppend", {
        content: this
      }).defaultPrevented) return;
      var t = ("decode" in this.element);
      this.isImageContent() ? t && this.slide && (!this.slide.isActive || m()) ? (this.isDecoding = !0, this.element.decode().catch(function () {}).finally(function () {
        _this16.isDecoding = !1, _this16.appendImage();
      })) : this.appendImage() : this.slide && !this.element.parentNode && this.slide.container.appendChild(this.element);
    }
  }, {
    key: "activate",
    value: function activate() {
      !this.instance.dispatch("contentActivate", {
        content: this
      }).defaultPrevented && this.slide && (this.isImageContent() && this.isDecoding && !m() ? this.appendImage() : this.isError() && this.load(!1, !0), this.slide.holderElement && this.slide.holderElement.setAttribute("aria-hidden", "false"));
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.instance.dispatch("contentDeactivate", {
        content: this
      }), this.slide && this.slide.holderElement && this.slide.holderElement.setAttribute("aria-hidden", "true");
    }
  }, {
    key: "remove",
    value: function remove() {
      this.isAttached = !1, this.instance.dispatch("contentRemove", {
        content: this
      }).defaultPrevented || (this.element && this.element.parentNode && this.element.remove(), this.placeholder && this.placeholder.element && this.placeholder.element.remove());
    }
  }, {
    key: "appendImage",
    value: function appendImage() {
      this.isAttached && (this.instance.dispatch("contentAppendImage", {
        content: this
      }).defaultPrevented || (this.slide && this.element && !this.element.parentNode && this.slide.container.appendChild(this.element), this.state !== u && this.state !== p || this.removePlaceholder()));
    }
  }]);
  return Y;
}();
function J(t, i, s) {
  var h = i.createContentFromData(t, s);
  var e;
  var n = i.options;
  if (n) {
    var _o2;
    e = new x(n, t, -1), _o2 = i.pswp ? i.pswp.viewportSize : w(n, i);
    var _r2 = y(n, _o2, t, s);
    e.update(h.width, h.height, _r2);
  }
  return h.lazyLoad(), e && h.setDisplayedSize(Math.ceil(h.width * e.initial), Math.ceil(h.height * e.initial)), h;
}
var Q = /*#__PURE__*/function () {
  function Q(t) {
    _classCallCheck(this, Q);
    this.pswp = t, this.limit = Math.max(t.options.preload[0] + t.options.preload[1] + 1, 5), this.Dt = [];
  }
  _createClass(Q, [{
    key: "updateLazy",
    value: function updateLazy(t) {
      var i = this.pswp;
      if (i.dispatch("lazyLoad").defaultPrevented) return;
      var s = i.options.preload,
        h = void 0 === t || t >= 0;
      var e;
      for (e = 0; e <= s[1]; e++) this.loadSlideByIndex(i.currIndex + (h ? e : -e));
      for (e = 1; e <= s[0]; e++) this.loadSlideByIndex(i.currIndex + (h ? -e : e));
    }
  }, {
    key: "loadSlideByIndex",
    value: function loadSlideByIndex(t) {
      var i = this.pswp.getLoopedIndex(t);
      var s = this.getContentByIndex(i);
      s || (s = function (t, i) {
        var s = i.getItemData(t);
        if (!i.dispatch("lazyLoadSlide", {
          index: t,
          itemData: s
        }).defaultPrevented) return J(s, i, t);
      }(i, this.pswp), s && this.addToCache(s));
    }
  }, {
    key: "getContentBySlide",
    value: function getContentBySlide(t) {
      var i = this.getContentByIndex(t.index);
      return i || (i = this.pswp.createContentFromData(t.data, t.index), this.addToCache(i)), i.setSlide(t), i;
    }
  }, {
    key: "addToCache",
    value: function addToCache(t) {
      if (this.removeByIndex(t.index), this.Dt.push(t), this.Dt.length > this.limit) {
        var _t12 = this.Dt.findIndex(function (t) {
          return !t.isAttached && !t.hasSlide;
        });
        if (-1 !== _t12) {
          this.Dt.splice(_t12, 1)[0].destroy();
        }
      }
    }
  }, {
    key: "removeByIndex",
    value: function removeByIndex(t) {
      var i = this.Dt.findIndex(function (i) {
        return i.index === t;
      });
      -1 !== i && this.Dt.splice(i, 1);
    }
  }, {
    key: "getContentByIndex",
    value: function getContentByIndex(t) {
      return this.Dt.find(function (i) {
        return i.index === t;
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.Dt.forEach(function (t) {
        return t.destroy();
      }), this.Dt = [];
    }
  }]);
  return Q;
}();
var tt = /*#__PURE__*/function () {
  function tt(t) {
    _classCallCheck(this, tt);
    this.pswp = t, this.isClosed = !0, this.isOpen = !1, this.isClosing = !1, this.isOpening = !1, this.It = void 0, this.Et = !1, this.Lt = !1, this.kt = !1, this.Zt = !1, this.Bt = void 0, this.Ft = void 0, this.Ot = void 0, this.Rt = void 0, this.Nt = void 0, this.Ut = this.Ut.bind(this), t.on("firstZoomPan", this.Ut);
  }
  _createClass(tt, [{
    key: "open",
    value: function open() {
      this.Ut(), this.Pt();
    }
  }, {
    key: "close",
    value: function close() {
      var _this17 = this;
      if (this.isClosed || this.isClosing || this.isOpening) return;
      var t = this.pswp.currSlide;
      this.isOpen = !1, this.isOpening = !1, this.isClosing = !0, this.It = this.pswp.options.hideAnimationDuration, t && t.currZoomLevel * t.width >= this.pswp.options.maxWidthToAnimate && (this.It = 0), this.Vt(), setTimeout(function () {
        _this17.Pt();
      }, this.Lt ? 30 : 0);
    }
  }, {
    key: "Ut",
    value: function Ut() {
      if (this.pswp.off("firstZoomPan", this.Ut), !this.isOpening) {
        var _t13 = this.pswp.currSlide;
        this.isOpening = !0, this.isClosing = !1, this.It = this.pswp.options.showAnimationDuration, _t13 && _t13.zoomLevels.initial * _t13.width >= this.pswp.options.maxWidthToAnimate && (this.It = 0), this.Vt();
      }
    }
  }, {
    key: "Vt",
    value: function Vt() {
      var t = this.pswp,
        i = this.pswp.currSlide,
        s = t.options;
      var h, e;
      ("fade" === s.showHideAnimationType ? (s.showHideOpacity = !0, this.Nt = void 0) : "none" === s.showHideAnimationType ? (s.showHideOpacity = !1, this.It = 0, this.Nt = void 0) : this.isOpening && t.Gt ? this.Nt = t.Gt : this.Nt = this.pswp.getThumbBounds(), this.Bt = null == i ? void 0 : i.getPlaceholderElement(), t.animations.stopAll(), this.Et = Boolean(this.It && this.It > 50), this.$t = Boolean(this.Nt) && (null == i ? void 0 : i.content.usePlaceholder()) && (!this.isClosing || !t.mainScroll.isShifted()), this.$t) ? this.kt = null !== (h = s.showHideOpacity) && void 0 !== h && h : (this.kt = !0, this.isOpening && i && (i.zoomAndPanToInitial(), i.applyCurrentZoomPan()));
      if (this.Zt = !this.kt && this.pswp.options.bgOpacity > .003, this.Ft = this.kt ? t.element : t.bg, !this.Et) return this.It = 0, this.$t = !1, this.Zt = !1, this.kt = !0, void (this.isOpening && (t.element && (t.element.style.opacity = String(.003)), t.applyBgOpacity(1)));
      this.$t && this.Nt && this.Nt.innerRect ? (this.Lt = !0, this.Ot = this.pswp.container, this.Rt = null === (e = this.pswp.currSlide) || void 0 === e ? void 0 : e.holderElement, t.container && (t.container.style.overflow = "hidden", t.container.style.width = t.viewportSize.x + "px")) : this.Lt = !1;
      this.isOpening ? (this.kt ? (t.element && (t.element.style.opacity = String(.003)), t.applyBgOpacity(1)) : (this.Zt && t.bg && (t.bg.style.opacity = String(.003)), t.element && (t.element.style.opacity = "1")), this.$t && (this.qt(), this.Bt && (this.Bt.style.willChange = "transform", this.Bt.style.opacity = String(.003)))) : this.isClosing && (t.mainScroll.itemHolders[0] && (t.mainScroll.itemHolders[0].el.style.display = "none"), t.mainScroll.itemHolders[2] && (t.mainScroll.itemHolders[2].el.style.display = "none"), this.Lt && 0 !== t.mainScroll.x && (t.mainScroll.resetPosition(), t.mainScroll.resize()));
    }
  }, {
    key: "Pt",
    value: function Pt() {
      var _this18 = this;
      this.isOpening && this.Et && this.Bt && "IMG" === this.Bt.tagName ? new Promise(function (t) {
        var i = !1,
          s = !0;
        var h;
        (h = _this18.Bt, "decode" in h ? h.decode().catch(function () {}) : h.complete ? Promise.resolve(h) : new Promise(function (t, i) {
          h.onload = function () {
            return t(h);
          }, h.onerror = i;
        })).finally(function () {
          i = !0, s || t(!0);
        }), setTimeout(function () {
          s = !1, i && t(!0);
        }, 50), setTimeout(t, 250);
      }).finally(function () {
        return _this18.Ht();
      }) : this.Ht();
    }
  }, {
    key: "Ht",
    value: function Ht() {
      var t, i;
      null === (t = this.pswp.element) || void 0 === t || t.style.setProperty("--pswp-transition-duration", this.It + "ms"), this.pswp.dispatch(this.isOpening ? "openingAnimationStart" : "closingAnimationStart"), this.pswp.dispatch("initialZoom" + (this.isOpening ? "In" : "Out")), null === (i = this.pswp.element) || void 0 === i || i.classList.toggle("pswp--ui-visible", this.isOpening), this.isOpening ? (this.Bt && (this.Bt.style.opacity = "1"), this.Kt()) : this.isClosing && this.Wt(), this.Et || this.jt();
    }
  }, {
    key: "jt",
    value: function jt() {
      var t = this.pswp;
      if (this.isOpen = this.isOpening, this.isClosed = this.isClosing, this.isOpening = !1, this.isClosing = !1, t.dispatch(this.isOpen ? "openingAnimationEnd" : "closingAnimationEnd"), t.dispatch("initialZoom" + (this.isOpen ? "InEnd" : "OutEnd")), this.isClosed) t.destroy();else if (this.isOpen) {
        var i;
        this.$t && t.container && (t.container.style.overflow = "visible", t.container.style.width = "100%"), null === (i = t.currSlide) || void 0 === i || i.applyCurrentZoomPan();
      }
    }
  }, {
    key: "Kt",
    value: function Kt() {
      var t = this.pswp;
      this.$t && (this.Lt && this.Ot && this.Rt && (this.Xt(this.Ot, "transform", "translate3d(0,0,0)"), this.Xt(this.Rt, "transform", "none")), t.currSlide && (t.currSlide.zoomAndPanToInitial(), this.Xt(t.currSlide.container, "transform", t.currSlide.getCurrentTransform()))), this.Zt && t.bg && this.Xt(t.bg, "opacity", String(t.options.bgOpacity)), this.kt && t.element && this.Xt(t.element, "opacity", "1");
    }
  }, {
    key: "Wt",
    value: function Wt() {
      var t = this.pswp;
      this.$t && this.qt(!0), this.Zt && t.bgOpacity > .01 && t.bg && this.Xt(t.bg, "opacity", "0"), this.kt && t.element && this.Xt(t.element, "opacity", "0");
    }
  }, {
    key: "qt",
    value: function qt(t) {
      if (!this.Nt) return;
      var s = this.pswp,
        h = this.Nt.innerRect,
        e = s.currSlide,
        n = s.viewportSize;
      if (this.Lt && h && this.Ot && this.Rt) {
        var _i11 = -n.x + (this.Nt.x - h.x) + h.w,
          _s10 = -n.y + (this.Nt.y - h.y) + h.h,
          _e4 = n.x - h.w,
          _a = n.y - h.h;
        t ? (this.Xt(this.Ot, "transform", o(_i11, _s10)), this.Xt(this.Rt, "transform", o(_e4, _a))) : (r(this.Ot, _i11, _s10), r(this.Rt, _e4, _a));
      }
      e && (i(e.pan, h || this.Nt), e.currZoomLevel = this.Nt.w / e.width, t ? this.Xt(e.container, "transform", e.getCurrentTransform()) : e.applyCurrentZoomPan());
    }
  }, {
    key: "Xt",
    value: function Xt(t, i, s) {
      var _this19 = this;
      if (!this.It) return void (t.style[i] = s);
      var h = this.pswp.animations,
        e = {
          duration: this.It,
          easing: this.pswp.options.easing,
          onComplete: function onComplete() {
            h.activeAnimations.length || _this19.jt();
          },
          target: t
        };
      e[i] = s, h.startTransition(e);
    }
  }]);
  return tt;
}();
var it = {
  allowPanToNext: !0,
  spacing: .1,
  loop: !0,
  pinchToClose: !0,
  closeOnVerticalDrag: !0,
  hideAnimationDuration: 333,
  showAnimationDuration: 333,
  zoomAnimationDuration: 333,
  escKey: !0,
  arrowKeys: !0,
  trapFocus: !0,
  returnFocus: !0,
  maxWidthToAnimate: 4e3,
  clickToCloseNonZoomable: !0,
  imageClickAction: "zoom-or-close",
  bgClickAction: "close",
  tapAction: "toggle-controls",
  doubleTapAction: "zoom",
  indexIndicatorSep: " / ",
  preloaderDelay: 2e3,
  bgOpacity: .8,
  index: 0,
  errorMsg: "The image cannot be loaded",
  preload: [1, 2],
  easing: "cubic-bezier(.4,0,.22,1)"
};
var st = /*#__PURE__*/function (_ref) {
  _inherits(st, _ref);
  var _super = _createSuper(st);
  function st(t) {
    var _this20;
    _classCallCheck(this, st);
    _this20 = _super.call(this), _this20.options = _this20.ii(t || {}), _this20.offset = {
      x: 0,
      y: 0
    }, _this20.si = {
      x: 0,
      y: 0
    }, _this20.viewportSize = {
      x: 0,
      y: 0
    }, _this20.bgOpacity = 1, _this20.currIndex = 0, _this20.potentialIndex = 0, _this20.isOpen = !1, _this20.isDestroying = !1, _this20.hasMouse = !1, _this20.hi = {}, _this20.Gt = void 0, _this20.topBar = void 0, _this20.element = void 0, _this20.template = void 0, _this20.container = void 0, _this20.scrollWrap = void 0, _this20.currSlide = void 0, _this20.events = new f(), _this20.animations = new F(), _this20.mainScroll = new A(_assertThisInitialized(_this20)), _this20.gestures = new T(_assertThisInitialized(_this20)), _this20.opener = new tt(_assertThisInitialized(_this20)), _this20.keyboard = new E(_assertThisInitialized(_this20)), _this20.contentLoader = new Q(_assertThisInitialized(_this20));
    return _this20;
  }
  _createClass(st, [{
    key: "init",
    value: function init() {
      var _this21 = this;
      if (this.isOpen || this.isDestroying) return !1;
      this.isOpen = !0, this.dispatch("init"), this.dispatch("beforeOpen"), this.ei();
      var t = "pswp--open";
      return this.gestures.supportsTouch && (t += " pswp--touch"), this.options.mainClass && (t += " " + this.options.mainClass), this.element && (this.element.className += " " + t), this.currIndex = this.options.index || 0, this.potentialIndex = this.currIndex, this.dispatch("firstUpdate"), this.scrollWheel = new O(this), (Number.isNaN(this.currIndex) || this.currIndex < 0 || this.currIndex >= this.getNumItems()) && (this.currIndex = 0), this.gestures.supportsTouch || this.mouseDetected(), this.updateSize(), this.offset.y = window.pageYOffset, this.hi = this.getItemData(this.currIndex), this.dispatch("gettingData", {
        index: this.currIndex,
        data: this.hi,
        slide: void 0
      }), this.Gt = this.getThumbBounds(), this.dispatch("initialLayout"), this.on("openingAnimationEnd", function () {
        var t = _this21.mainScroll.itemHolders;
        t[0] && (t[0].el.style.display = "block", _this21.setContent(t[0], _this21.currIndex - 1)), t[2] && (t[2].el.style.display = "block", _this21.setContent(t[2], _this21.currIndex + 1)), _this21.appendHeavy(), _this21.contentLoader.updateLazy(), _this21.events.add(window, "resize", _this21.ni.bind(_this21)), _this21.events.add(window, "scroll", _this21.oi.bind(_this21)), _this21.dispatch("bindEvents");
      }), this.mainScroll.itemHolders[1] && this.setContent(this.mainScroll.itemHolders[1], this.currIndex), this.dispatch("change"), this.opener.open(), this.dispatch("afterInit"), !0;
    }
  }, {
    key: "getLoopedIndex",
    value: function getLoopedIndex(t) {
      var i = this.getNumItems();
      return this.options.loop && (t > i - 1 && (t -= i), t < 0 && (t += i)), n(t, 0, i - 1);
    }
  }, {
    key: "appendHeavy",
    value: function appendHeavy() {
      this.mainScroll.itemHolders.forEach(function (t) {
        var i;
        null === (i = t.slide) || void 0 === i || i.appendHeavy();
      });
    }
  }, {
    key: "goTo",
    value: function goTo(t) {
      this.mainScroll.moveIndexBy(this.getLoopedIndex(t) - this.potentialIndex);
    }
  }, {
    key: "next",
    value: function next() {
      this.goTo(this.potentialIndex + 1);
    }
  }, {
    key: "prev",
    value: function prev() {
      this.goTo(this.potentialIndex - 1);
    }
  }, {
    key: "zoomTo",
    value: function zoomTo() {
      var _i12;
      var i;
      null === (i = this.currSlide) || void 0 === i || (_i12 = i).zoomTo.apply(_i12, arguments);
    }
  }, {
    key: "toggleZoom",
    value: function toggleZoom() {
      var t;
      null === (t = this.currSlide) || void 0 === t || t.toggleZoom();
    }
  }, {
    key: "close",
    value: function close() {
      this.opener.isOpen && !this.isDestroying && (this.isDestroying = !0, this.dispatch("close"), this.events.removeAll(), this.opener.close());
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var t;
      if (!this.isDestroying) return this.options.showHideAnimationType = "none", void this.close();
      this.dispatch("destroy"), this.Yt = {}, this.scrollWrap && (this.scrollWrap.ontouchmove = null, this.scrollWrap.ontouchend = null), null === (t = this.element) || void 0 === t || t.remove(), this.mainScroll.itemHolders.forEach(function (t) {
        var i;
        null === (i = t.slide) || void 0 === i || i.destroy();
      }), this.contentLoader.destroy(), this.events.removeAll();
    }
  }, {
    key: "refreshSlideContent",
    value: function refreshSlideContent(t) {
      var _this22 = this;
      this.contentLoader.removeByIndex(t), this.mainScroll.itemHolders.forEach(function (i, s) {
        var h, e;
        var n = (null !== (h = null === (e = _this22.currSlide) || void 0 === e ? void 0 : e.index) && void 0 !== h ? h : 0) - 1 + s;
        var o;
        (_this22.canLoop() && (n = _this22.getLoopedIndex(n)), n === t) && (_this22.setContent(i, t, !0), 1 === s && (_this22.currSlide = i.slide, null === (o = i.slide) || void 0 === o || o.setIsActive(!0)));
      }), this.dispatch("change");
    }
  }, {
    key: "setContent",
    value: function setContent(t, i, s) {
      if (this.canLoop() && (i = this.getLoopedIndex(i)), t.slide) {
        if (t.slide.index === i && !s) return;
        t.slide.destroy(), t.slide = void 0;
      }
      if (!this.canLoop() && (i < 0 || i >= this.getNumItems())) return;
      var h = this.getItemData(i);
      t.slide = new b(h, i, this), i === this.currIndex && (this.currSlide = t.slide), t.slide.append(t.el);
    }
  }, {
    key: "getViewportCenterPoint",
    value: function getViewportCenterPoint() {
      return {
        x: this.viewportSize.x / 2,
        y: this.viewportSize.y / 2
      };
    }
  }, {
    key: "updateSize",
    value: function updateSize(t) {
      if (this.isDestroying) return;
      var s = w(this.options, this);
      !t && e(s, this.si) || (i(this.si, s), this.dispatch("beforeResize"), i(this.viewportSize, this.si), this.oi(), this.dispatch("viewportSize"), this.mainScroll.resize(this.opener.isOpen), !this.hasMouse && window.matchMedia("(any-hover: hover)").matches && this.mouseDetected(), this.dispatch("resize"));
    }
  }, {
    key: "applyBgOpacity",
    value: function applyBgOpacity(t) {
      this.bgOpacity = Math.max(t, 0), this.bg && (this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity));
    }
  }, {
    key: "mouseDetected",
    value: function mouseDetected() {
      var t;
      this.hasMouse || (this.hasMouse = !0, null === (t = this.element) || void 0 === t || t.classList.add("pswp--has_mouse"));
    }
  }, {
    key: "ni",
    value: function ni() {
      var _this23 = this;
      this.updateSize(), /iPhone|iPad|iPod/i.test(window.navigator.userAgent) && setTimeout(function () {
        _this23.updateSize();
      }, 500);
    }
  }, {
    key: "oi",
    value: function oi() {
      this.setScrollOffset(0, window.pageYOffset);
    }
  }, {
    key: "setScrollOffset",
    value: function setScrollOffset(t, i) {
      this.offset.x = t, this.offset.y = i, this.dispatch("updateScrollOffset");
    }
  }, {
    key: "ei",
    value: function ei() {
      this.element = t("pswp", "div"), this.element.setAttribute("tabindex", "-1"), this.element.setAttribute("role", "dialog"), this.template = this.element, this.bg = t("pswp__bg", "div", this.element), this.scrollWrap = t("pswp__scroll-wrap", "section", this.element), this.container = t("pswp__container", "div", this.scrollWrap), this.scrollWrap.setAttribute("aria-roledescription", "carousel"), this.container.setAttribute("aria-live", "off"), this.container.setAttribute("id", "pswp__items"), this.mainScroll.appendHolders(), this.ui = new W(this), this.ui.init(), (this.options.appendToEl || document.body).appendChild(this.element);
    }
  }, {
    key: "getThumbBounds",
    value: function getThumbBounds() {
      return function (t, i, s) {
        var h = s.dispatch("thumbBounds", {
          index: t,
          itemData: i,
          instance: s
        });
        if (h.thumbBounds) return h.thumbBounds;
        var e = i.element;
        var n, o;
        if (e && !1 !== s.options.thumbSelector) {
          var _t14 = s.options.thumbSelector || "img";
          o = e.matches(_t14) ? e : e.querySelector(_t14);
        }
        return o = s.applyFilters("thumbEl", o, i, t), o && (n = i.thumbCropped ? function (t, i, s) {
          var h = t.getBoundingClientRect(),
            e = h.width / i,
            n = h.height / s,
            o = e > n ? e : n,
            r = (h.width - i * o) / 2,
            a = (h.height - s * o) / 2,
            l = {
              x: h.left + r,
              y: h.top + a,
              w: i * o
            };
          return l.innerRect = {
            w: h.width,
            h: h.height,
            x: r,
            y: a
          }, l;
        }(o, i.width || i.w || 0, i.height || i.h || 0) : function (t) {
          var i = t.getBoundingClientRect();
          return {
            x: i.left,
            y: i.top,
            w: i.width
          };
        }(o)), s.applyFilters("thumbBounds", n, i, t);
      }(this.currIndex, this.currSlide ? this.currSlide.data : this.hi, this);
    }
  }, {
    key: "canLoop",
    value: function canLoop() {
      return this.options.loop && this.getNumItems() > 2;
    }
  }, {
    key: "ii",
    value: function ii(t) {
      return window.matchMedia("(prefers-reduced-motion), (update: slow)").matches && (t.showHideAnimationType = "none", t.zoomAnimationDuration = 0), _objectSpread(_objectSpread({}, it), t);
    }
  }]);
  return st;
}( /*#__PURE__*/function (_ref2) {
  _inherits(_class, _ref2);
  var _super2 = _createSuper(_class);
  function _class() {
    _classCallCheck(this, _class);
    return _super2.apply(this, arguments);
  }
  _createClass(_class, [{
    key: "getNumItems",
    value: function getNumItems() {
      var t;
      var i = 0;
      var s = null === (t = this.options) || void 0 === t ? void 0 : t.dataSource;
      s && "length" in s ? i = s.length : s && "gallery" in s && (s.items || (s.items = this.Qt(s.gallery)), s.items && (i = s.items.length));
      var h = this.dispatch("numItems", {
        dataSource: s,
        numItems: i
      });
      return this.applyFilters("numItems", h.numItems, s);
    }
  }, {
    key: "createContentFromData",
    value: function createContentFromData(t, i) {
      return new Y(t, this, i);
    }
  }, {
    key: "getItemData",
    value: function getItemData(t) {
      var i;
      var s = null === (i = this.options) || void 0 === i ? void 0 : i.dataSource;
      var h = {};
      Array.isArray(s) ? h = s[t] : s && "gallery" in s && (s.items || (s.items = this.Qt(s.gallery)), h = s.items[t]);
      var e = h;
      e instanceof Element && (e = this.ti(e));
      var n = this.dispatch("itemData", {
        itemData: e || {},
        index: t
      });
      return this.applyFilters("itemData", n.itemData, t);
    }
  }, {
    key: "Qt",
    value: function Qt(t) {
      var i, s;
      return null !== (i = this.options) && void 0 !== i && i.children || null !== (s = this.options) && void 0 !== s && s.childSelector ? function (t, i) {
        var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;
        var h = [];
        if (t instanceof Element) h = [t];else if (t instanceof NodeList || Array.isArray(t)) h = Array.from(t);else {
          var _e5 = "string" == typeof t ? t : i;
          _e5 && (h = Array.from(s.querySelectorAll(_e5)));
        }
        return h;
      }(this.options.children, this.options.childSelector, t) || [] : [t];
    }
  }, {
    key: "ti",
    value: function ti(t) {
      var i = {
          element: t
        },
        s = "A" === t.tagName ? t : t.querySelector("a");
      if (s) {
        i.src = s.dataset.pswpSrc || s.href, s.dataset.pswpSrcset && (i.srcset = s.dataset.pswpSrcset), i.width = s.dataset.pswpWidth ? parseInt(s.dataset.pswpWidth, 10) : 0, i.height = s.dataset.pswpHeight ? parseInt(s.dataset.pswpHeight, 10) : 0, i.w = i.width, i.h = i.height, s.dataset.pswpType && (i.type = s.dataset.pswpType);
        var _e6 = t.querySelector("img");
        var h;
        if (_e6) i.msrc = _e6.currentSrc || _e6.src, i.alt = null !== (h = _e6.getAttribute("alt")) && void 0 !== h ? h : "";
        (s.dataset.pswpCropped || s.dataset.cropped) && (i.thumbCropped = !0);
      }
      return this.applyFilters("domItemData", i, t, s);
    }
  }, {
    key: "lazyLoadData",
    value: function lazyLoadData(t, i) {
      return J(t, this, i);
    }
  }]);
  return _class;
}( /*#__PURE__*/function () {
  function _class2() {
    _classCallCheck(this, _class2);
    this.Yt = {}, this.Jt = {}, this.pswp = void 0, this.options = void 0;
  }
  _createClass(_class2, [{
    key: "addFilter",
    value: function addFilter(t, i) {
      var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;
      var h, e, n;
      this.Jt[t] || (this.Jt[t] = []), null === (h = this.Jt[t]) || void 0 === h || h.push({
        fn: i,
        priority: s
      }), null === (e = this.Jt[t]) || void 0 === e || e.sort(function (t, i) {
        return t.priority - i.priority;
      }), null === (n = this.pswp) || void 0 === n || n.addFilter(t, i, s);
    }
  }, {
    key: "removeFilter",
    value: function removeFilter(t, i) {
      this.Jt[t] && (this.Jt[t] = this.Jt[t].filter(function (t) {
        return t.fn !== i;
      })), this.pswp && this.pswp.removeFilter(t, i);
    }
  }, {
    key: "applyFilters",
    value: function applyFilters(t) {
      var _this24 = this;
      for (var _len = arguments.length, i = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        i[_key - 1] = arguments[_key];
      }
      var s;
      return null === (s = this.Jt[t]) || void 0 === s || s.forEach(function (t) {
        i[0] = t.fn.apply(_this24, i);
      }), i[0];
    }
  }, {
    key: "on",
    value: function on(t, i) {
      var s, h;
      this.Yt[t] || (this.Yt[t] = []), null === (s = this.Yt[t]) || void 0 === s || s.push(i), null === (h = this.pswp) || void 0 === h || h.on(t, i);
    }
  }, {
    key: "off",
    value: function off(t, i) {
      var s;
      this.Yt[t] && (this.Yt[t] = this.Yt[t].filter(function (t) {
        return i !== t;
      })), null === (s = this.pswp) || void 0 === s || s.off(t, i);
    }
  }, {
    key: "dispatch",
    value: function dispatch(t, i) {
      var _this25 = this;
      var s;
      if (this.pswp) return this.pswp.dispatch(t, i);
      var h = new j(t, i);
      return null === (s = this.Yt[t]) || void 0 === s || s.forEach(function (t) {
        t.call(_this25, h);
      }), h;
    }
  }]);
  return _class2;
}()));


/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map